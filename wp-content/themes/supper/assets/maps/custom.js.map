{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/owl.carousel2/dist/owl.carousel.js","src/js/common/GotoId.js","src/js/common/HtmlFeature.js","src/js/common/JsTab.js","src/js/common/Menu2.js","src/js/common/MobileMenu.js","src/js/common/StickyHeader.js","src/js/common/spiner.js","src/js/common/styleImg.js","src/js/entry/GoogleMap.js","src/js/modules/countDown.js","src/js/modules/homeTab.js","src/js/modules/slider.js","src/js/utils/functions.js","src/js/vendor/jquery.validate.js"],"names":[],"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","file":"../supper/custom.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n * Owl Carousel v2.2.1\n * Copyright 2013-2017 Saurabh Sharma\n * Licensed under  ()\n */\n/**\n * Owl carousel\n * @version 2.1.6\n * @author Bartosz Wojciechowski\n * @author Saurabh Sharma\n * @license The MIT License (MIT)\n * @todo Lazy Load Icon\n * @todo prevent animationend bubling\n * @todo itemsScaleUp\n * @todo Test Zepto\n * @todo stagePadding calculate wrong active classes\n */\n;(function($, window, document, undefined) {\n\n\t/**\n\t * Creates a carousel.\n\t * @class The Owl Carousel.\n\t * @public\n\t * @param {HTMLElement|jQuery} element - The element to create the carousel for.\n\t * @param {Object} [options] - The options\n\t */\n\tfunction Owl(element, options) {\n\n\t\t/**\n\t\t * Current settings for the carousel.\n\t\t * @public\n\t\t */\n\t\tthis.settings = null;\n\n\t\t/**\n\t\t * Current options set by the caller including defaults.\n\t\t * @public\n\t\t */\n\t\tthis.options = $.extend({}, Owl.Defaults, options);\n\n\t\t/**\n\t\t * Plugin element.\n\t\t * @public\n\t\t */\n\t\tthis.$element = $(element);\n\n\t\t/**\n\t\t * Proxied event handlers.\n\t\t * @protected\n\t\t */\n\t\tthis._handlers = {};\n\n\t\t/**\n\t\t * References to the running plugins of this carousel.\n\t\t * @protected\n\t\t */\n\t\tthis._plugins = {};\n\n\t\t/**\n\t\t * Currently suppressed events to prevent them from beeing retriggered.\n\t\t * @protected\n\t\t */\n\t\tthis._supress = {};\n\n\t\t/**\n\t\t * Absolute current position.\n\t\t * @protected\n\t\t */\n\t\tthis._current = null;\n\n\t\t/**\n\t\t * Animation speed in milliseconds.\n\t\t * @protected\n\t\t */\n\t\tthis._speed = null;\n\n\t\t/**\n\t\t * Coordinates of all items in pixel.\n\t\t * @todo The name of this member is missleading.\n\t\t * @protected\n\t\t */\n\t\tthis._coordinates = [];\n\n\t\t/**\n\t\t * Current breakpoint.\n\t\t * @todo Real media queries would be nice.\n\t\t * @protected\n\t\t */\n\t\tthis._breakpoint = null;\n\n\t\t/**\n\t\t * Current width of the plugin element.\n\t\t */\n\t\tthis._width = null;\n\n\t\t/**\n\t\t * All real items.\n\t\t * @protected\n\t\t */\n\t\tthis._items = [];\n\n\t\t/**\n\t\t * All cloned items.\n\t\t * @protected\n\t\t */\n\t\tthis._clones = [];\n\n\t\t/**\n\t\t * Merge values of all items.\n\t\t * @todo Maybe this could be part of a plugin.\n\t\t * @protected\n\t\t */\n\t\tthis._mergers = [];\n\n\t\t/**\n\t\t * Widths of all items.\n\t\t */\n\t\tthis._widths = [];\n\n\t\t/**\n\t\t * Invalidated parts within the update process.\n\t\t * @protected\n\t\t */\n\t\tthis._invalidated = {};\n\n\t\t/**\n\t\t * Ordered list of workers for the update process.\n\t\t * @protected\n\t\t */\n\t\tthis._pipe = [];\n\n\t\t/**\n\t\t * Current state information for the drag operation.\n\t\t * @todo #261\n\t\t * @protected\n\t\t */\n\t\tthis._drag = {\n\t\t\ttime: null,\n\t\t\ttarget: null,\n\t\t\tpointer: null,\n\t\t\tstage: {\n\t\t\t\tstart: null,\n\t\t\t\tcurrent: null\n\t\t\t},\n\t\t\tdirection: null\n\t\t};\n\n\t\t/**\n\t\t * Current state information and their tags.\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._states = {\n\t\t\tcurrent: {},\n\t\t\ttags: {\n\t\t\t\t'initializing': [ 'busy' ],\n\t\t\t\t'animating': [ 'busy' ],\n\t\t\t\t'dragging': [ 'interacting' ]\n\t\t\t}\n\t\t};\n\n\t\t$.each([ 'onResize', 'onThrottledResize' ], $.proxy(function(i, handler) {\n\t\t\tthis._handlers[handler] = $.proxy(this[handler], this);\n\t\t}, this));\n\n\t\t$.each(Owl.Plugins, $.proxy(function(key, plugin) {\n\t\t\tthis._plugins[key.charAt(0).toLowerCase() + key.slice(1)]\n\t\t\t\t= new plugin(this);\n\t\t}, this));\n\n\t\t$.each(Owl.Workers, $.proxy(function(priority, worker) {\n\t\t\tthis._pipe.push({\n\t\t\t\t'filter': worker.filter,\n\t\t\t\t'run': $.proxy(worker.run, this)\n\t\t\t});\n\t\t}, this));\n\n\t\tthis.setup();\n\t\tthis.initialize();\n\t}\n\n\t/**\n\t * Default options for the carousel.\n\t * @public\n\t */\n\tOwl.Defaults = {\n\t\titems: 3,\n\t\tloop: false,\n\t\tcenter: false,\n\t\trewind: false,\n\n\t\tmouseDrag: true,\n\t\ttouchDrag: true,\n\t\tpullDrag: true,\n\t\tfreeDrag: false,\n\n\t\tmargin: 0,\n\t\tstagePadding: 0,\n\n\t\tmerge: false,\n\t\tmergeFit: true,\n\t\tautoWidth: false,\n\n\t\tstartPosition: 0,\n\t\trtl: false,\n\n\t\tsmartSpeed: 250,\n\t\tfluidSpeed: false,\n\t\tdragEndSpeed: false,\n\n\t\tresponsive: {},\n\t\tresponsiveRefreshRate: 200,\n\t\tresponsiveBaseElement: window,\n\n\t\tfallbackEasing: 'swing',\n\n\t\tinfo: false,\n\n\t\tnestedItemSelector: false,\n\t\titemElement: 'div',\n\t\tstageElement: 'div',\n\n\t\trefreshClass: 'owl-refresh',\n\t\tloadedClass: 'owl-loaded',\n\t\tloadingClass: 'owl-loading',\n\t\trtlClass: 'owl-rtl',\n\t\tresponsiveClass: 'owl-responsive',\n\t\tdragClass: 'owl-drag',\n\t\titemClass: 'owl-item',\n\t\tstageClass: 'owl-stage',\n\t\tstageOuterClass: 'owl-stage-outer',\n\t\tgrabClass: 'owl-grab'\n\t};\n\n\t/**\n\t * Enumeration for width.\n\t * @public\n\t * @readonly\n\t * @enum {String}\n\t */\n\tOwl.Width = {\n\t\tDefault: 'default',\n\t\tInner: 'inner',\n\t\tOuter: 'outer'\n\t};\n\n\t/**\n\t * Enumeration for types.\n\t * @public\n\t * @readonly\n\t * @enum {String}\n\t */\n\tOwl.Type = {\n\t\tEvent: 'event',\n\t\tState: 'state'\n\t};\n\n\t/**\n\t * Contains all registered plugins.\n\t * @public\n\t */\n\tOwl.Plugins = {};\n\n\t/**\n\t * List of workers involved in the update process.\n\t */\n\tOwl.Workers = [ {\n\t\tfilter: [ 'width', 'settings' ],\n\t\trun: function() {\n\t\t\tthis._width = this.$element.width();\n\t\t}\n\t}, {\n\t\tfilter: [ 'width', 'items', 'settings' ],\n\t\trun: function(cache) {\n\t\t\tcache.current = this._items && this._items[this.relative(this._current)];\n\t\t}\n\t}, {\n\t\tfilter: [ 'items', 'settings' ],\n\t\trun: function() {\n\t\t\tthis.$stage.children('.cloned').remove();\n\t\t}\n\t}, {\n\t\tfilter: [ 'width', 'items', 'settings' ],\n\t\trun: function(cache) {\n\t\t\tvar margin = this.settings.margin || '',\n\t\t\t\tgrid = !this.settings.autoWidth,\n\t\t\t\trtl = this.settings.rtl,\n\t\t\t\tcss = {\n\t\t\t\t\t'width': 'auto',\n\t\t\t\t\t'margin-left': rtl ? margin : '',\n\t\t\t\t\t'margin-right': rtl ? '' : margin\n\t\t\t\t};\n\n\t\t\t!grid && this.$stage.children().css(css);\n\n\t\t\tcache.css = css;\n\t\t}\n\t}, {\n\t\tfilter: [ 'width', 'items', 'settings' ],\n\t\trun: function(cache) {\n\t\t\tvar width = (this.width() / this.settings.items).toFixed(3) - this.settings.margin,\n\t\t\t\tmerge = null,\n\t\t\t\titerator = this._items.length,\n\t\t\t\tgrid = !this.settings.autoWidth,\n\t\t\t\twidths = [];\n\n\t\t\tcache.items = {\n\t\t\t\tmerge: false,\n\t\t\t\twidth: width\n\t\t\t};\n\n\t\t\twhile (iterator--) {\n\t\t\t\tmerge = this._mergers[iterator];\n\t\t\t\tmerge = this.settings.mergeFit && Math.min(merge, this.settings.items) || merge;\n\n\t\t\t\tcache.items.merge = merge > 1 || cache.items.merge;\n\n\t\t\t\twidths[iterator] = !grid ? this._items[iterator].width() : width * merge;\n\t\t\t}\n\n\t\t\tthis._widths = widths;\n\t\t}\n\t}, {\n\t\tfilter: [ 'items', 'settings' ],\n\t\trun: function() {\n\t\t\tvar clones = [],\n\t\t\t\titems = this._items,\n\t\t\t\tsettings = this.settings,\n\t\t\t\t// TODO: Should be computed from number of min width items in stage\n\t\t\t\tview = Math.max(settings.items * 2, 4),\n\t\t\t\tsize = Math.ceil(items.length / 2) * 2,\n\t\t\t\trepeat = settings.loop && items.length ? settings.rewind ? view : Math.max(view, size) : 0,\n\t\t\t\tappend = '',\n\t\t\t\tprepend = '';\n\n\t\t\trepeat /= 2;\n\n\t\t\twhile (repeat--) {\n\t\t\t\t// Switch to only using appended clones\n\t\t\t\tclones.push(this.normalize(clones.length / 2, true));\n\t\t\t\t$(items[clones[clones.length - 1]][0]).clone(true).addClass('cloned').appendTo(this.$stage);\n\t\t\t\tclones.push(this.normalize(items.length - 1 - (clones.length - 1) / 2, true));\n\t\t\t\t$(items[clones[clones.length - 1]][0]).clone(true).addClass('cloned').prependTo(this.$stage);\n\t\t\t}\n\n\t\t\tthis._clones = clones;\n\n\t\t}\n\t}, {\n\t\tfilter: [ 'width', 'items', 'settings' ],\n\t\trun: function() {\n\t\t\tvar rtl = this.settings.rtl ? 1 : -1,\n\t\t\t\tsize = this._clones.length + this._items.length,\n\t\t\t\titerator = -1,\n\t\t\t\tprevious = 0,\n\t\t\t\tcurrent = 0,\n\t\t\t\tcoordinates = [];\n\n\t\t\twhile (++iterator < size) {\n\t\t\t\tprevious = coordinates[iterator - 1] || 0;\n\t\t\t\tcurrent = this._widths[this.relative(iterator)] + this.settings.margin;\n\t\t\t\tcoordinates.push(previous + current * rtl);\n\t\t\t}\n\n\t\t\tthis._coordinates = coordinates;\n\t\t}\n\t}, {\n\t\tfilter: [ 'width', 'items', 'settings' ],\n\t\trun: function() {\n\t\t\tvar padding = this.settings.stagePadding,\n\t\t\t\tcoordinates = this._coordinates,\n\t\t\t\tcss = {\n\t\t\t\t\t'width': Math.ceil(Math.abs(coordinates[coordinates.length - 1])) + padding * 2,\n\t\t\t\t\t'padding-left': padding || '',\n\t\t\t\t\t'padding-right': padding || ''\n\t\t\t\t};\n\n\t\t\tthis.$stage.css(css);\n\t\t}\n\t}, {\n\t\tfilter: [ 'width', 'items', 'settings' ],\n\t\trun: function(cache) {\n\t\t\tvar iterator = this._coordinates.length,\n\t\t\t\tgrid = !this.settings.autoWidth,\n\t\t\t\titems = this.$stage.children();\n\n\t\t\tif (grid && cache.items.merge) {\n\t\t\t\twhile (iterator--) {\n\t\t\t\t\tcache.css.width = this._widths[this.relative(iterator)];\n\t\t\t\t\titems.eq(iterator).css(cache.css);\n\t\t\t\t}\n\t\t\t} else if (grid) {\n\t\t\t\tcache.css.width = cache.items.width;\n\t\t\t\titems.css(cache.css);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tfilter: [ 'items' ],\n\t\trun: function() {\n\t\t\tthis._coordinates.length < 1 && this.$stage.removeAttr('style');\n\t\t}\n\t}, {\n\t\tfilter: [ 'width', 'items', 'settings' ],\n\t\trun: function(cache) {\n\t\t\tcache.current = cache.current ? this.$stage.children().index(cache.current) : 0;\n\t\t\tcache.current = Math.max(this.minimum(), Math.min(this.maximum(), cache.current));\n\t\t\tthis.reset(cache.current);\n\t\t}\n\t}, {\n\t\tfilter: [ 'position' ],\n\t\trun: function() {\n\t\t\tthis.animate(this.coordinates(this._current));\n\t\t}\n\t}, {\n\t\tfilter: [ 'width', 'position', 'items', 'settings' ],\n\t\trun: function() {\n\t\t\tvar rtl = this.settings.rtl ? 1 : -1,\n\t\t\t\tpadding = this.settings.stagePadding * 2,\n\t\t\t\tbegin = this.coordinates(this.current()) + padding,\n\t\t\t\tend = begin + this.width() * rtl,\n\t\t\t\tinner, outer, matches = [], i, n;\n\n\t\t\tfor (i = 0, n = this._coordinates.length; i < n; i++) {\n\t\t\t\tinner = this._coordinates[i - 1] || 0;\n\t\t\t\touter = Math.abs(this._coordinates[i]) + padding * rtl;\n\n\t\t\t\tif ((this.op(inner, '<=', begin) && (this.op(inner, '>', end)))\n\t\t\t\t\t|| (this.op(outer, '<', begin) && this.op(outer, '>', end))) {\n\t\t\t\t\tmatches.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.$stage.children('.active').removeClass('active');\n\t\t\tthis.$stage.children(':eq(' + matches.join('), :eq(') + ')').addClass('active');\n\n\t\t\tif (this.settings.center) {\n\t\t\t\tthis.$stage.children('.center').removeClass('center');\n\t\t\t\tthis.$stage.children().eq(this.current()).addClass('center');\n\t\t\t}\n\t\t}\n\t} ];\n\n\t/**\n\t * Initializes the carousel.\n\t * @protected\n\t */\n\tOwl.prototype.initialize = function() {\n\t\tthis.enter('initializing');\n\t\tthis.trigger('initialize');\n\n\t\tthis.$element.toggleClass(this.settings.rtlClass, this.settings.rtl);\n\n\t\tif (this.settings.autoWidth && !this.is('pre-loading')) {\n\t\t\tvar imgs, nestedSelector, width;\n\t\t\timgs = this.$element.find('img');\n\t\t\tnestedSelector = this.settings.nestedItemSelector ? '.' + this.settings.nestedItemSelector : undefined;\n\t\t\twidth = this.$element.children(nestedSelector).width();\n\n\t\t\tif (imgs.length && width <= 0) {\n\t\t\t\tthis.preloadAutoWidthImages(imgs);\n\t\t\t}\n\t\t}\n\n\t\tthis.$element.addClass(this.options.loadingClass);\n\n\t\t// create stage\n\t\tthis.$stage = $('<' + this.settings.stageElement + ' class=\"' + this.settings.stageClass + '\"/>')\n\t\t\t.wrap('<div class=\"' + this.settings.stageOuterClass + '\"/>');\n\n\t\t// append stage\n\t\tthis.$element.append(this.$stage.parent());\n\n\t\t// append content\n\t\tthis.replace(this.$element.children().not(this.$stage.parent()));\n\n\t\t// check visibility\n\t\tif (this.$element.is(':visible')) {\n\t\t\t// update view\n\t\t\tthis.refresh();\n\t\t} else {\n\t\t\t// invalidate width\n\t\t\tthis.invalidate('width');\n\t\t}\n\n\t\tthis.$element\n\t\t\t.removeClass(this.options.loadingClass)\n\t\t\t.addClass(this.options.loadedClass);\n\n\t\t// register event handlers\n\t\tthis.registerEventHandlers();\n\n\t\tthis.leave('initializing');\n\t\tthis.trigger('initialized');\n\t};\n\n\t/**\n\t * Setups the current settings.\n\t * @todo Remove responsive classes. Why should adaptive designs be brought into IE8?\n\t * @todo Support for media queries by using `matchMedia` would be nice.\n\t * @public\n\t */\n\tOwl.prototype.setup = function() {\n\t\tvar viewport = this.viewport(),\n\t\t\toverwrites = this.options.responsive,\n\t\t\tmatch = -1,\n\t\t\tsettings = null;\n\n\t\tif (!overwrites) {\n\t\t\tsettings = $.extend({}, this.options);\n\t\t} else {\n\t\t\t$.each(overwrites, function(breakpoint) {\n\t\t\t\tif (breakpoint <= viewport && breakpoint > match) {\n\t\t\t\t\tmatch = Number(breakpoint);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsettings = $.extend({}, this.options, overwrites[match]);\n\t\t\tif (typeof settings.stagePadding === 'function') {\n\t\t\t\tsettings.stagePadding = settings.stagePadding();\n\t\t\t}\n\t\t\tdelete settings.responsive;\n\n\t\t\t// responsive class\n\t\t\tif (settings.responsiveClass) {\n\t\t\t\tthis.$element.attr('class',\n\t\t\t\t\tthis.$element.attr('class').replace(new RegExp('(' + this.options.responsiveClass + '-)\\\\S+\\\\s', 'g'), '$1' + match)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis.trigger('change', { property: { name: 'settings', value: settings } });\n\t\tthis._breakpoint = match;\n\t\tthis.settings = settings;\n\t\tthis.invalidate('settings');\n\t\tthis.trigger('changed', { property: { name: 'settings', value: this.settings } });\n\t};\n\n\t/**\n\t * Updates option logic if necessery.\n\t * @protected\n\t */\n\tOwl.prototype.optionsLogic = function() {\n\t\tif (this.settings.autoWidth) {\n\t\t\tthis.settings.stagePadding = false;\n\t\t\tthis.settings.merge = false;\n\t\t}\n\t};\n\n\t/**\n\t * Prepares an item before add.\n\t * @todo Rename event parameter `content` to `item`.\n\t * @protected\n\t * @returns {jQuery|HTMLElement} - The item container.\n\t */\n\tOwl.prototype.prepare = function(item) {\n\t\tvar event = this.trigger('prepare', { content: item });\n\n\t\tif (!event.data) {\n\t\t\tevent.data = $('<' + this.settings.itemElement + '/>')\n\t\t\t\t.addClass(this.options.itemClass).append(item)\n\t\t}\n\n\t\tthis.trigger('prepared', { content: event.data });\n\n\t\treturn event.data;\n\t};\n\n\t/**\n\t * Updates the view.\n\t * @public\n\t */\n\tOwl.prototype.update = function() {\n\t\tvar i = 0,\n\t\t\tn = this._pipe.length,\n\t\t\tfilter = $.proxy(function(p) { return this[p] }, this._invalidated),\n\t\t\tcache = {};\n\n\t\twhile (i < n) {\n\t\t\tif (this._invalidated.all || $.grep(this._pipe[i].filter, filter).length > 0) {\n\t\t\t\tthis._pipe[i].run(cache);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tthis._invalidated = {};\n\n\t\t!this.is('valid') && this.enter('valid');\n\t};\n\n\t/**\n\t * Gets the width of the view.\n\t * @public\n\t * @param {Owl.Width} [dimension=Owl.Width.Default] - The dimension to return.\n\t * @returns {Number} - The width of the view in pixel.\n\t */\n\tOwl.prototype.width = function(dimension) {\n\t\tdimension = dimension || Owl.Width.Default;\n\t\tswitch (dimension) {\n\t\t\tcase Owl.Width.Inner:\n\t\t\tcase Owl.Width.Outer:\n\t\t\t\treturn this._width;\n\t\t\tdefault:\n\t\t\t\treturn this._width - this.settings.stagePadding * 2 + this.settings.margin;\n\t\t}\n\t};\n\n\t/**\n\t * Refreshes the carousel primarily for adaptive purposes.\n\t * @public\n\t */\n\tOwl.prototype.refresh = function() {\n\t\tthis.enter('refreshing');\n\t\tthis.trigger('refresh');\n\n\t\tthis.setup();\n\n\t\tthis.optionsLogic();\n\n\t\tthis.$element.addClass(this.options.refreshClass);\n\n\t\tthis.update();\n\n\t\tthis.$element.removeClass(this.options.refreshClass);\n\n\t\tthis.leave('refreshing');\n\t\tthis.trigger('refreshed');\n\t};\n\n\t/**\n\t * Checks window `resize` event.\n\t * @protected\n\t */\n\tOwl.prototype.onThrottledResize = function() {\n\t\twindow.clearTimeout(this.resizeTimer);\n\t\tthis.resizeTimer = window.setTimeout(this._handlers.onResize, this.settings.responsiveRefreshRate);\n\t};\n\n\t/**\n\t * Checks window `resize` event.\n\t * @protected\n\t */\n\tOwl.prototype.onResize = function() {\n\t\tif (!this._items.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._width === this.$element.width()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.$element.is(':visible')) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.enter('resizing');\n\n\t\tif (this.trigger('resize').isDefaultPrevented()) {\n\t\t\tthis.leave('resizing');\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.invalidate('width');\n\n\t\tthis.refresh();\n\n\t\tthis.leave('resizing');\n\t\tthis.trigger('resized');\n\t};\n\n\t/**\n\t * Registers event handlers.\n\t * @todo Check `msPointerEnabled`\n\t * @todo #261\n\t * @protected\n\t */\n\tOwl.prototype.registerEventHandlers = function() {\n\t\tif ($.support.transition) {\n\t\t\tthis.$stage.on($.support.transition.end + '.owl.core', $.proxy(this.onTransitionEnd, this));\n\t\t}\n\n\t\tif (this.settings.responsive !== false) {\n\t\t\tthis.on(window, 'resize', this._handlers.onThrottledResize);\n\t\t}\n\n\t\tif (this.settings.mouseDrag) {\n\t\t\tthis.$element.addClass(this.options.dragClass);\n\t\t\tthis.$stage.on('mousedown.owl.core', $.proxy(this.onDragStart, this));\n\t\t\tthis.$stage.on('dragstart.owl.core selectstart.owl.core', function() { return false });\n\t\t}\n\n\t\tif (this.settings.touchDrag){\n\t\t\tthis.$stage.on('touchstart.owl.core', $.proxy(this.onDragStart, this));\n\t\t\tthis.$stage.on('touchcancel.owl.core', $.proxy(this.onDragEnd, this));\n\t\t}\n\t};\n\n\t/**\n\t * Handles `touchstart` and `mousedown` events.\n\t * @todo Horizontal swipe threshold as option\n\t * @todo #261\n\t * @protected\n\t * @param {Event} event - The event arguments.\n\t */\n\tOwl.prototype.onDragStart = function(event) {\n\t\tvar stage = null;\n\n\t\tif (event.which === 3) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ($.support.transform) {\n\t\t\tstage = this.$stage.css('transform').replace(/.*\\(|\\)| /g, '').split(',');\n\t\t\tstage = {\n\t\t\t\tx: stage[stage.length === 16 ? 12 : 4],\n\t\t\t\ty: stage[stage.length === 16 ? 13 : 5]\n\t\t\t};\n\t\t} else {\n\t\t\tstage = this.$stage.position();\n\t\t\tstage = {\n\t\t\t\tx: this.settings.rtl ?\n\t\t\t\t\tstage.left + this.$stage.width() - this.width() + this.settings.margin :\n\t\t\t\t\tstage.left,\n\t\t\t\ty: stage.top\n\t\t\t};\n\t\t}\n\n\t\tif (this.is('animating')) {\n\t\t\t$.support.transform ? this.animate(stage.x) : this.$stage.stop()\n\t\t\tthis.invalidate('position');\n\t\t}\n\n\t\tthis.$element.toggleClass(this.options.grabClass, event.type === 'mousedown');\n\n\t\tthis.speed(0);\n\n\t\tthis._drag.time = new Date().getTime();\n\t\tthis._drag.target = $(event.target);\n\t\tthis._drag.stage.start = stage;\n\t\tthis._drag.stage.current = stage;\n\t\tthis._drag.pointer = this.pointer(event);\n\n\t\t$(document).on('mouseup.owl.core touchend.owl.core', $.proxy(this.onDragEnd, this));\n\n\t\t$(document).one('mousemove.owl.core touchmove.owl.core', $.proxy(function(event) {\n\t\t\tvar delta = this.difference(this._drag.pointer, this.pointer(event));\n\n\t\t\t$(document).on('mousemove.owl.core touchmove.owl.core', $.proxy(this.onDragMove, this));\n\n\t\t\tif (Math.abs(delta.x) < Math.abs(delta.y) && this.is('valid')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.enter('dragging');\n\t\t\tthis.trigger('drag');\n\t\t}, this));\n\t};\n\n\t/**\n\t * Handles the `touchmove` and `mousemove` events.\n\t * @todo #261\n\t * @protected\n\t * @param {Event} event - The event arguments.\n\t */\n\tOwl.prototype.onDragMove = function(event) {\n\t\tvar minimum = null,\n\t\t\tmaximum = null,\n\t\t\tpull = null,\n\t\t\tdelta = this.difference(this._drag.pointer, this.pointer(event)),\n\t\t\tstage = this.difference(this._drag.stage.start, delta);\n\n\t\tif (!this.is('dragging')) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tif (this.settings.loop) {\n\t\t\tminimum = this.coordinates(this.minimum());\n\t\t\tmaximum = this.coordinates(this.maximum() + 1) - minimum;\n\t\t\tstage.x = (((stage.x - minimum) % maximum + maximum) % maximum) + minimum;\n\t\t} else {\n\t\t\tminimum = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum());\n\t\t\tmaximum = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum());\n\t\t\tpull = this.settings.pullDrag ? -1 * delta.x / 5 : 0;\n\t\t\tstage.x = Math.max(Math.min(stage.x, minimum + pull), maximum + pull);\n\t\t}\n\n\t\tthis._drag.stage.current = stage;\n\n\t\tthis.animate(stage.x);\n\t};\n\n\t/**\n\t * Handles the `touchend` and `mouseup` events.\n\t * @todo #261\n\t * @todo Threshold for click event\n\t * @protected\n\t * @param {Event} event - The event arguments.\n\t */\n\tOwl.prototype.onDragEnd = function(event) {\n\t\tvar delta = this.difference(this._drag.pointer, this.pointer(event)),\n\t\t\tstage = this._drag.stage.current,\n\t\t\tdirection = delta.x > 0 ^ this.settings.rtl ? 'left' : 'right';\n\n\t\t$(document).off('.owl.core');\n\n\t\tthis.$element.removeClass(this.options.grabClass);\n\n\t\tif (delta.x !== 0 && this.is('dragging') || !this.is('valid')) {\n\t\t\tthis.speed(this.settings.dragEndSpeed || this.settings.smartSpeed);\n\t\t\tthis.current(this.closest(stage.x, delta.x !== 0 ? direction : this._drag.direction));\n\t\t\tthis.invalidate('position');\n\t\t\tthis.update();\n\n\t\t\tthis._drag.direction = direction;\n\n\t\t\tif (Math.abs(delta.x) > 3 || new Date().getTime() - this._drag.time > 300) {\n\t\t\t\tthis._drag.target.one('click.owl.core', function() { return false; });\n\t\t\t}\n\t\t}\n\n\t\tif (!this.is('dragging')) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.leave('dragging');\n\t\tthis.trigger('dragged');\n\t};\n\n\t/**\n\t * Gets absolute position of the closest item for a coordinate.\n\t * @todo Setting `freeDrag` makes `closest` not reusable. See #165.\n\t * @protected\n\t * @param {Number} coordinate - The coordinate in pixel.\n\t * @param {String} direction - The direction to check for the closest item. Ether `left` or `right`.\n\t * @return {Number} - The absolute position of the closest item.\n\t */\n\tOwl.prototype.closest = function(coordinate, direction) {\n\t\tvar position = -1,\n\t\t\tpull = 30,\n\t\t\twidth = this.width(),\n\t\t\tcoordinates = this.coordinates();\n\n\t\tif (!this.settings.freeDrag) {\n\t\t\t// check closest item\n\t\t\t$.each(coordinates, $.proxy(function(index, value) {\n\t\t\t\t// on a left pull, check on current index\n\t\t\t\tif (direction === 'left' && coordinate > value - pull && coordinate < value + pull) {\n\t\t\t\t\tposition = index;\n\t\t\t\t// on a right pull, check on previous index\n\t\t\t\t// to do so, subtract width from value and set position = index + 1\n\t\t\t\t} else if (direction === 'right' && coordinate > value - width - pull && coordinate < value - width + pull) {\n\t\t\t\t\tposition = index + 1;\n\t\t\t\t} else if (this.op(coordinate, '<', value)\n\t\t\t\t\t&& this.op(coordinate, '>', coordinates[index + 1] || value - width)) {\n\t\t\t\t\tposition = direction === 'left' ? index + 1 : index;\n\t\t\t\t}\n\t\t\t\treturn position === -1;\n\t\t\t}, this));\n\t\t}\n\n\t\tif (!this.settings.loop) {\n\t\t\t// non loop boundries\n\t\t\tif (this.op(coordinate, '>', coordinates[this.minimum()])) {\n\t\t\t\tposition = coordinate = this.minimum();\n\t\t\t} else if (this.op(coordinate, '<', coordinates[this.maximum()])) {\n\t\t\t\tposition = coordinate = this.maximum();\n\t\t\t}\n\t\t}\n\n\t\treturn position;\n\t};\n\n\t/**\n\t * Animates the stage.\n\t * @todo #270\n\t * @public\n\t * @param {Number} coordinate - The coordinate in pixels.\n\t */\n\tOwl.prototype.animate = function(coordinate) {\n\t\tvar animate = this.speed() > 0;\n\n\t\tthis.is('animating') && this.onTransitionEnd();\n\n\t\tif (animate) {\n\t\t\tthis.enter('animating');\n\t\t\tthis.trigger('translate');\n\t\t}\n\n\t\tif ($.support.transform3d && $.support.transition) {\n\t\t\tthis.$stage.css({\n\t\t\t\ttransform: 'translate3d(' + coordinate + 'px,0px,0px)',\n\t\t\t\ttransition: (this.speed() / 1000) + 's'\n\t\t\t});\n\t\t} else if (animate) {\n\t\t\tthis.$stage.animate({\n\t\t\t\tleft: coordinate + 'px'\n\t\t\t}, this.speed(), this.settings.fallbackEasing, $.proxy(this.onTransitionEnd, this));\n\t\t} else {\n\t\t\tthis.$stage.css({\n\t\t\t\tleft: coordinate + 'px'\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Checks whether the carousel is in a specific state or not.\n\t * @param {String} state - The state to check.\n\t * @returns {Boolean} - The flag which indicates if the carousel is busy.\n\t */\n\tOwl.prototype.is = function(state) {\n\t\treturn this._states.current[state] && this._states.current[state] > 0;\n\t};\n\n\t/**\n\t * Sets the absolute position of the current item.\n\t * @public\n\t * @param {Number} [position] - The new absolute position or nothing to leave it unchanged.\n\t * @returns {Number} - The absolute position of the current item.\n\t */\n\tOwl.prototype.current = function(position) {\n\t\tif (position === undefined) {\n\t\t\treturn this._current;\n\t\t}\n\n\t\tif (this._items.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tposition = this.normalize(position);\n\n\t\tif (this._current !== position) {\n\t\t\tvar event = this.trigger('change', { property: { name: 'position', value: position } });\n\n\t\t\tif (event.data !== undefined) {\n\t\t\t\tposition = this.normalize(event.data);\n\t\t\t}\n\n\t\t\tthis._current = position;\n\n\t\t\tthis.invalidate('position');\n\n\t\t\tthis.trigger('changed', { property: { name: 'position', value: this._current } });\n\t\t}\n\n\t\treturn this._current;\n\t};\n\n\t/**\n\t * Invalidates the given part of the update routine.\n\t * @param {String} [part] - The part to invalidate.\n\t * @returns {Array.<String>} - The invalidated parts.\n\t */\n\tOwl.prototype.invalidate = function(part) {\n\t\tif ($.type(part) === 'string') {\n\t\t\tthis._invalidated[part] = true;\n\t\t\tthis.is('valid') && this.leave('valid');\n\t\t}\n\t\treturn $.map(this._invalidated, function(v, i) { return i });\n\t};\n\n\t/**\n\t * Resets the absolute position of the current item.\n\t * @public\n\t * @param {Number} position - The absolute position of the new item.\n\t */\n\tOwl.prototype.reset = function(position) {\n\t\tposition = this.normalize(position);\n\n\t\tif (position === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._speed = 0;\n\t\tthis._current = position;\n\n\t\tthis.suppress([ 'translate', 'translated' ]);\n\n\t\tthis.animate(this.coordinates(position));\n\n\t\tthis.release([ 'translate', 'translated' ]);\n\t};\n\n\t/**\n\t * Normalizes an absolute or a relative position of an item.\n\t * @public\n\t * @param {Number} position - The absolute or relative position to normalize.\n\t * @param {Boolean} [relative=false] - Whether the given position is relative or not.\n\t * @returns {Number} - The normalized position.\n\t */\n\tOwl.prototype.normalize = function(position, relative) {\n\t\tvar n = this._items.length,\n\t\t\tm = relative ? 0 : this._clones.length;\n\n\t\tif (!this.isNumeric(position) || n < 1) {\n\t\t\tposition = undefined;\n\t\t} else if (position < 0 || position >= n + m) {\n\t\t\tposition = ((position - m / 2) % n + n) % n + m / 2;\n\t\t}\n\n\t\treturn position;\n\t};\n\n\t/**\n\t * Converts an absolute position of an item into a relative one.\n\t * @public\n\t * @param {Number} position - The absolute position to convert.\n\t * @returns {Number} - The converted position.\n\t */\n\tOwl.prototype.relative = function(position) {\n\t\tposition -= this._clones.length / 2;\n\t\treturn this.normalize(position, true);\n\t};\n\n\t/**\n\t * Gets the maximum position for the current item.\n\t * @public\n\t * @param {Boolean} [relative=false] - Whether to return an absolute position or a relative position.\n\t * @returns {Number}\n\t */\n\tOwl.prototype.maximum = function(relative) {\n\t\tvar settings = this.settings,\n\t\t\tmaximum = this._coordinates.length,\n\t\t\titerator,\n\t\t\treciprocalItemsWidth,\n\t\t\telementWidth;\n\n\t\tif (settings.loop) {\n\t\t\tmaximum = this._clones.length / 2 + this._items.length - 1;\n\t\t} else if (settings.autoWidth || settings.merge) {\n\t\t\titerator = this._items.length;\n\t\t\treciprocalItemsWidth = this._items[--iterator].width();\n\t\t\telementWidth = this.$element.width();\n\t\t\twhile (iterator--) {\n\t\t\t\treciprocalItemsWidth += this._items[iterator].width() + this.settings.margin;\n\t\t\t\tif (reciprocalItemsWidth > elementWidth) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmaximum = iterator + 1;\n\t\t} else if (settings.center) {\n\t\t\tmaximum = this._items.length - 1;\n\t\t} else {\n\t\t\tmaximum = this._items.length - settings.items;\n\t\t}\n\n\t\tif (relative) {\n\t\t\tmaximum -= this._clones.length / 2;\n\t\t}\n\n\t\treturn Math.max(maximum, 0);\n\t};\n\n\t/**\n\t * Gets the minimum position for the current item.\n\t * @public\n\t * @param {Boolean} [relative=false] - Whether to return an absolute position or a relative position.\n\t * @returns {Number}\n\t */\n\tOwl.prototype.minimum = function(relative) {\n\t\treturn relative ? 0 : this._clones.length / 2;\n\t};\n\n\t/**\n\t * Gets an item at the specified relative position.\n\t * @public\n\t * @param {Number} [position] - The relative position of the item.\n\t * @return {jQuery|Array.<jQuery>} - The item at the given position or all items if no position was given.\n\t */\n\tOwl.prototype.items = function(position) {\n\t\tif (position === undefined) {\n\t\t\treturn this._items.slice();\n\t\t}\n\n\t\tposition = this.normalize(position, true);\n\t\treturn this._items[position];\n\t};\n\n\t/**\n\t * Gets an item at the specified relative position.\n\t * @public\n\t * @param {Number} [position] - The relative position of the item.\n\t * @return {jQuery|Array.<jQuery>} - The item at the given position or all items if no position was given.\n\t */\n\tOwl.prototype.mergers = function(position) {\n\t\tif (position === undefined) {\n\t\t\treturn this._mergers.slice();\n\t\t}\n\n\t\tposition = this.normalize(position, true);\n\t\treturn this._mergers[position];\n\t};\n\n\t/**\n\t * Gets the absolute positions of clones for an item.\n\t * @public\n\t * @param {Number} [position] - The relative position of the item.\n\t * @returns {Array.<Number>} - The absolute positions of clones for the item or all if no position was given.\n\t */\n\tOwl.prototype.clones = function(position) {\n\t\tvar odd = this._clones.length / 2,\n\t\t\teven = odd + this._items.length,\n\t\t\tmap = function(index) { return index % 2 === 0 ? even + index / 2 : odd - (index + 1) / 2 };\n\n\t\tif (position === undefined) {\n\t\t\treturn $.map(this._clones, function(v, i) { return map(i) });\n\t\t}\n\n\t\treturn $.map(this._clones, function(v, i) { return v === position ? map(i) : null });\n\t};\n\n\t/**\n\t * Sets the current animation speed.\n\t * @public\n\t * @param {Number} [speed] - The animation speed in milliseconds or nothing to leave it unchanged.\n\t * @returns {Number} - The current animation speed in milliseconds.\n\t */\n\tOwl.prototype.speed = function(speed) {\n\t\tif (speed !== undefined) {\n\t\t\tthis._speed = speed;\n\t\t}\n\n\t\treturn this._speed;\n\t};\n\n\t/**\n\t * Gets the coordinate of an item.\n\t * @todo The name of this method is missleanding.\n\t * @public\n\t * @param {Number} position - The absolute position of the item within `minimum()` and `maximum()`.\n\t * @returns {Number|Array.<Number>} - The coordinate of the item in pixel or all coordinates.\n\t */\n\tOwl.prototype.coordinates = function(position) {\n\t\tvar multiplier = 1,\n\t\t\tnewPosition = position - 1,\n\t\t\tcoordinate;\n\n\t\tif (position === undefined) {\n\t\t\treturn $.map(this._coordinates, $.proxy(function(coordinate, index) {\n\t\t\t\treturn this.coordinates(index);\n\t\t\t}, this));\n\t\t}\n\n\t\tif (this.settings.center) {\n\t\t\tif (this.settings.rtl) {\n\t\t\t\tmultiplier = -1;\n\t\t\t\tnewPosition = position + 1;\n\t\t\t}\n\n\t\t\tcoordinate = this._coordinates[position];\n\t\t\tcoordinate += (this.width() - coordinate + (this._coordinates[newPosition] || 0)) / 2 * multiplier;\n\t\t} else {\n\t\t\tcoordinate = this._coordinates[newPosition] || 0;\n\t\t}\n\n\t\tcoordinate = Math.ceil(coordinate);\n\n\t\treturn coordinate;\n\t};\n\n\t/**\n\t * Calculates the speed for a translation.\n\t * @protected\n\t * @param {Number} from - The absolute position of the start item.\n\t * @param {Number} to - The absolute position of the target item.\n\t * @param {Number} [factor=undefined] - The time factor in milliseconds.\n\t * @returns {Number} - The time in milliseconds for the translation.\n\t */\n\tOwl.prototype.duration = function(from, to, factor) {\n\t\tif (factor === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn Math.min(Math.max(Math.abs(to - from), 1), 6) * Math.abs((factor || this.settings.smartSpeed));\n\t};\n\n\t/**\n\t * Slides to the specified item.\n\t * @public\n\t * @param {Number} position - The position of the item.\n\t * @param {Number} [speed] - The time in milliseconds for the transition.\n\t */\n\tOwl.prototype.to = function(position, speed) {\n\t\tvar current = this.current(),\n\t\t\trevert = null,\n\t\t\tdistance = position - this.relative(current),\n\t\t\tdirection = (distance > 0) - (distance < 0),\n\t\t\titems = this._items.length,\n\t\t\tminimum = this.minimum(),\n\t\t\tmaximum = this.maximum();\n\n\t\tif (this.settings.loop) {\n\t\t\tif (!this.settings.rewind && Math.abs(distance) > items / 2) {\n\t\t\t\tdistance += direction * -1 * items;\n\t\t\t}\n\n\t\t\tposition = current + distance;\n\t\t\trevert = ((position - minimum) % items + items) % items + minimum;\n\n\t\t\tif (revert !== position && revert - distance <= maximum && revert - distance > 0) {\n\t\t\t\tcurrent = revert - distance;\n\t\t\t\tposition = revert;\n\t\t\t\tthis.reset(current);\n\t\t\t}\n\t\t} else if (this.settings.rewind) {\n\t\t\tmaximum += 1;\n\t\t\tposition = (position % maximum + maximum) % maximum;\n\t\t} else {\n\t\t\tposition = Math.max(minimum, Math.min(maximum, position));\n\t\t}\n\n\t\tthis.speed(this.duration(current, position, speed));\n\t\tthis.current(position);\n\n\t\tif (this.$element.is(':visible')) {\n\t\t\tthis.update();\n\t\t}\n\t};\n\n\t/**\n\t * Slides to the next item.\n\t * @public\n\t * @param {Number} [speed] - The time in milliseconds for the transition.\n\t */\n\tOwl.prototype.next = function(speed) {\n\t\tspeed = speed || false;\n\t\tthis.to(this.relative(this.current()) + 1, speed);\n\t};\n\n\t/**\n\t * Slides to the previous item.\n\t * @public\n\t * @param {Number} [speed] - The time in milliseconds for the transition.\n\t */\n\tOwl.prototype.prev = function(speed) {\n\t\tspeed = speed || false;\n\t\tthis.to(this.relative(this.current()) - 1, speed);\n\t};\n\n\t/**\n\t * Handles the end of an animation.\n\t * @protected\n\t * @param {Event} event - The event arguments.\n\t */\n\tOwl.prototype.onTransitionEnd = function(event) {\n\n\t\t// if css2 animation then event object is undefined\n\t\tif (event !== undefined) {\n\t\t\tevent.stopPropagation();\n\n\t\t\t// Catch only owl-stage transitionEnd event\n\t\t\tif ((event.target || event.srcElement || event.originalTarget) !== this.$stage.get(0)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tthis.leave('animating');\n\t\tthis.trigger('translated');\n\t};\n\n\t/**\n\t * Gets viewport width.\n\t * @protected\n\t * @return {Number} - The width in pixel.\n\t */\n\tOwl.prototype.viewport = function() {\n\t\tvar width;\n\t\tif (this.options.responsiveBaseElement !== window) {\n\t\t\twidth = $(this.options.responsiveBaseElement).width();\n\t\t} else if (window.innerWidth) {\n\t\t\twidth = window.innerWidth;\n\t\t} else if (document.documentElement && document.documentElement.clientWidth) {\n\t\t\twidth = document.documentElement.clientWidth;\n\t\t} else {\n\t\t\tconsole.warn('Can not detect viewport width.');\n\t\t}\n\t\treturn width;\n\t};\n\n\t/**\n\t * Replaces the current content.\n\t * @public\n\t * @param {HTMLElement|jQuery|String} content - The new content.\n\t */\n\tOwl.prototype.replace = function(content) {\n\t\tthis.$stage.empty();\n\t\tthis._items = [];\n\n\t\tif (content) {\n\t\t\tcontent = (content instanceof jQuery) ? content : $(content);\n\t\t}\n\n\t\tif (this.settings.nestedItemSelector) {\n\t\t\tcontent = content.find('.' + this.settings.nestedItemSelector);\n\t\t}\n\n\t\tcontent.filter(function() {\n\t\t\treturn this.nodeType === 1;\n\t\t}).each($.proxy(function(index, item) {\n\t\t\titem = this.prepare(item);\n\t\t\tthis.$stage.append(item);\n\t\t\tthis._items.push(item);\n\t\t\tthis._mergers.push(item.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);\n\t\t}, this));\n\n\t\tthis.reset(this.isNumeric(this.settings.startPosition) ? this.settings.startPosition : 0);\n\n\t\tthis.invalidate('items');\n\t};\n\n\t/**\n\t * Adds an item.\n\t * @todo Use `item` instead of `content` for the event arguments.\n\t * @public\n\t * @param {HTMLElement|jQuery|String} content - The item content to add.\n\t * @param {Number} [position] - The relative position at which to insert the item otherwise the item will be added to the end.\n\t */\n\tOwl.prototype.add = function(content, position) {\n\t\tvar current = this.relative(this._current);\n\n\t\tposition = position === undefined ? this._items.length : this.normalize(position, true);\n\t\tcontent = content instanceof jQuery ? content : $(content);\n\n\t\tthis.trigger('add', { content: content, position: position });\n\n\t\tcontent = this.prepare(content);\n\n\t\tif (this._items.length === 0 || position === this._items.length) {\n\t\t\tthis._items.length === 0 && this.$stage.append(content);\n\t\t\tthis._items.length !== 0 && this._items[position - 1].after(content);\n\t\t\tthis._items.push(content);\n\t\t\tthis._mergers.push(content.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);\n\t\t} else {\n\t\t\tthis._items[position].before(content);\n\t\t\tthis._items.splice(position, 0, content);\n\t\t\tthis._mergers.splice(position, 0, content.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);\n\t\t}\n\n\t\tthis._items[current] && this.reset(this._items[current].index());\n\n\t\tthis.invalidate('items');\n\n\t\tthis.trigger('added', { content: content, position: position });\n\t};\n\n\t/**\n\t * Removes an item by its position.\n\t * @todo Use `item` instead of `content` for the event arguments.\n\t * @public\n\t * @param {Number} position - The relative position of the item to remove.\n\t */\n\tOwl.prototype.remove = function(position) {\n\t\tposition = this.normalize(position, true);\n\n\t\tif (position === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.trigger('remove', { content: this._items[position], position: position });\n\n\t\tthis._items[position].remove();\n\t\tthis._items.splice(position, 1);\n\t\tthis._mergers.splice(position, 1);\n\n\t\tthis.invalidate('items');\n\n\t\tthis.trigger('removed', { content: null, position: position });\n\t};\n\n\t/**\n\t * Preloads images with auto width.\n\t * @todo Replace by a more generic approach\n\t * @protected\n\t */\n\tOwl.prototype.preloadAutoWidthImages = function(images) {\n\t\timages.each($.proxy(function(i, element) {\n\t\t\tthis.enter('pre-loading');\n\t\t\telement = $(element);\n\t\t\t$(new Image()).one('load', $.proxy(function(e) {\n\t\t\t\telement.attr('src', e.target.src);\n\t\t\t\telement.css('opacity', 1);\n\t\t\t\tthis.leave('pre-loading');\n\t\t\t\t!this.is('pre-loading') && !this.is('initializing') && this.refresh();\n\t\t\t}, this)).attr('src', element.attr('src') || element.attr('data-src') || element.attr('data-src-retina'));\n\t\t}, this));\n\t};\n\n\t/**\n\t * Destroys the carousel.\n\t * @public\n\t */\n\tOwl.prototype.destroy = function() {\n\n\t\tthis.$element.off('.owl.core');\n\t\tthis.$stage.off('.owl.core');\n\t\t$(document).off('.owl.core');\n\n\t\tif (this.settings.responsive !== false) {\n\t\t\twindow.clearTimeout(this.resizeTimer);\n\t\t\tthis.off(window, 'resize', this._handlers.onThrottledResize);\n\t\t}\n\n\t\tfor (var i in this._plugins) {\n\t\t\tthis._plugins[i].destroy();\n\t\t}\n\n\t\tthis.$stage.children('.cloned').remove();\n\n\t\tthis.$stage.unwrap();\n\t\tthis.$stage.children().contents().unwrap();\n\t\tthis.$stage.children().unwrap();\n\n\t\tthis.$element\n\t\t\t.removeClass(this.options.refreshClass)\n\t\t\t.removeClass(this.options.loadingClass)\n\t\t\t.removeClass(this.options.loadedClass)\n\t\t\t.removeClass(this.options.rtlClass)\n\t\t\t.removeClass(this.options.dragClass)\n\t\t\t.removeClass(this.options.grabClass)\n\t\t\t.attr('class', this.$element.attr('class').replace(new RegExp(this.options.responsiveClass + '-\\\\S+\\\\s', 'g'), ''))\n\t\t\t.removeData('owl.carousel');\n\t};\n\n\t/**\n\t * Operators to calculate right-to-left and left-to-right.\n\t * @protected\n\t * @param {Number} [a] - The left side operand.\n\t * @param {String} [o] - The operator.\n\t * @param {Number} [b] - The right side operand.\n\t */\n\tOwl.prototype.op = function(a, o, b) {\n\t\tvar rtl = this.settings.rtl;\n\t\tswitch (o) {\n\t\t\tcase '<':\n\t\t\t\treturn rtl ? a > b : a < b;\n\t\t\tcase '>':\n\t\t\t\treturn rtl ? a < b : a > b;\n\t\t\tcase '>=':\n\t\t\t\treturn rtl ? a <= b : a >= b;\n\t\t\tcase '<=':\n\t\t\t\treturn rtl ? a >= b : a <= b;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t/**\n\t * Attaches to an internal event.\n\t * @protected\n\t * @param {HTMLElement} element - The event source.\n\t * @param {String} event - The event name.\n\t * @param {Function} listener - The event handler to attach.\n\t * @param {Boolean} capture - Wether the event should be handled at the capturing phase or not.\n\t */\n\tOwl.prototype.on = function(element, event, listener, capture) {\n\t\tif (element.addEventListener) {\n\t\t\telement.addEventListener(event, listener, capture);\n\t\t} else if (element.attachEvent) {\n\t\t\telement.attachEvent('on' + event, listener);\n\t\t}\n\t};\n\n\t/**\n\t * Detaches from an internal event.\n\t * @protected\n\t * @param {HTMLElement} element - The event source.\n\t * @param {String} event - The event name.\n\t * @param {Function} listener - The attached event handler to detach.\n\t * @param {Boolean} capture - Wether the attached event handler was registered as a capturing listener or not.\n\t */\n\tOwl.prototype.off = function(element, event, listener, capture) {\n\t\tif (element.removeEventListener) {\n\t\t\telement.removeEventListener(event, listener, capture);\n\t\t} else if (element.detachEvent) {\n\t\t\telement.detachEvent('on' + event, listener);\n\t\t}\n\t};\n\n\t/**\n\t * Triggers a public event.\n\t * @todo Remove `status`, `relatedTarget` should be used instead.\n\t * @protected\n\t * @param {String} name - The event name.\n\t * @param {*} [data=null] - The event data.\n\t * @param {String} [namespace=carousel] - The event namespace.\n\t * @param {String} [state] - The state which is associated with the event.\n\t * @param {Boolean} [enter=false] - Indicates if the call enters the specified state or not.\n\t * @returns {Event} - The event arguments.\n\t */\n\tOwl.prototype.trigger = function(name, data, namespace, state, enter) {\n\t\tvar status = {\n\t\t\titem: { count: this._items.length, index: this.current() }\n\t\t}, handler = $.camelCase(\n\t\t\t$.grep([ 'on', name, namespace ], function(v) { return v })\n\t\t\t\t.join('-').toLowerCase()\n\t\t), event = $.Event(\n\t\t\t[ name, 'owl', namespace || 'carousel' ].join('.').toLowerCase(),\n\t\t\t$.extend({ relatedTarget: this }, status, data)\n\t\t);\n\n\t\tif (!this._supress[name]) {\n\t\t\t$.each(this._plugins, function(name, plugin) {\n\t\t\t\tif (plugin.onTrigger) {\n\t\t\t\t\tplugin.onTrigger(event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.register({ type: Owl.Type.Event, name: name });\n\t\t\tthis.$element.trigger(event);\n\n\t\t\tif (this.settings && typeof this.settings[handler] === 'function') {\n\t\t\t\tthis.settings[handler].call(this, event);\n\t\t\t}\n\t\t}\n\n\t\treturn event;\n\t};\n\n\t/**\n\t * Enters a state.\n\t * @param name - The state name.\n\t */\n\tOwl.prototype.enter = function(name) {\n\t\t$.each([ name ].concat(this._states.tags[name] || []), $.proxy(function(i, name) {\n\t\t\tif (this._states.current[name] === undefined) {\n\t\t\t\tthis._states.current[name] = 0;\n\t\t\t}\n\n\t\t\tthis._states.current[name]++;\n\t\t}, this));\n\t};\n\n\t/**\n\t * Leaves a state.\n\t * @param name - The state name.\n\t */\n\tOwl.prototype.leave = function(name) {\n\t\t$.each([ name ].concat(this._states.tags[name] || []), $.proxy(function(i, name) {\n\t\t\tthis._states.current[name]--;\n\t\t}, this));\n\t};\n\n\t/**\n\t * Registers an event or state.\n\t * @public\n\t * @param {Object} object - The event or state to register.\n\t */\n\tOwl.prototype.register = function(object) {\n\t\tif (object.type === Owl.Type.Event) {\n\t\t\tif (!$.event.special[object.name]) {\n\t\t\t\t$.event.special[object.name] = {};\n\t\t\t}\n\n\t\t\tif (!$.event.special[object.name].owl) {\n\t\t\t\tvar _default = $.event.special[object.name]._default;\n\t\t\t\t$.event.special[object.name]._default = function(e) {\n\t\t\t\t\tif (_default && _default.apply && (!e.namespace || e.namespace.indexOf('owl') === -1)) {\n\t\t\t\t\t\treturn _default.apply(this, arguments);\n\t\t\t\t\t}\n\t\t\t\t\treturn e.namespace && e.namespace.indexOf('owl') > -1;\n\t\t\t\t};\n\t\t\t\t$.event.special[object.name].owl = true;\n\t\t\t}\n\t\t} else if (object.type === Owl.Type.State) {\n\t\t\tif (!this._states.tags[object.name]) {\n\t\t\t\tthis._states.tags[object.name] = object.tags;\n\t\t\t} else {\n\t\t\t\tthis._states.tags[object.name] = this._states.tags[object.name].concat(object.tags);\n\t\t\t}\n\n\t\t\tthis._states.tags[object.name] = $.grep(this._states.tags[object.name], $.proxy(function(tag, i) {\n\t\t\t\treturn $.inArray(tag, this._states.tags[object.name]) === i;\n\t\t\t}, this));\n\t\t}\n\t};\n\n\t/**\n\t * Suppresses events.\n\t * @protected\n\t * @param {Array.<String>} events - The events to suppress.\n\t */\n\tOwl.prototype.suppress = function(events) {\n\t\t$.each(events, $.proxy(function(index, event) {\n\t\t\tthis._supress[event] = true;\n\t\t}, this));\n\t};\n\n\t/**\n\t * Releases suppressed events.\n\t * @protected\n\t * @param {Array.<String>} events - The events to release.\n\t */\n\tOwl.prototype.release = function(events) {\n\t\t$.each(events, $.proxy(function(index, event) {\n\t\t\tdelete this._supress[event];\n\t\t}, this));\n\t};\n\n\t/**\n\t * Gets unified pointer coordinates from event.\n\t * @todo #261\n\t * @protected\n\t * @param {Event} - The `mousedown` or `touchstart` event.\n\t * @returns {Object} - Contains `x` and `y` coordinates of current pointer position.\n\t */\n\tOwl.prototype.pointer = function(event) {\n\t\tvar result = { x: null, y: null };\n\n\t\tevent = event.originalEvent || event || window.event;\n\n\t\tevent = event.touches && event.touches.length ?\n\t\t\tevent.touches[0] : event.changedTouches && event.changedTouches.length ?\n\t\t\t\tevent.changedTouches[0] : event;\n\n\t\tif (event.pageX) {\n\t\t\tresult.x = event.pageX;\n\t\t\tresult.y = event.pageY;\n\t\t} else {\n\t\t\tresult.x = event.clientX;\n\t\t\tresult.y = event.clientY;\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t/**\n\t * Determines if the input is a Number or something that can be coerced to a Number\n\t * @protected\n\t * @param {Number|String|Object|Array|Boolean|RegExp|Function|Symbol} - The input to be tested\n\t * @returns {Boolean} - An indication if the input is a Number or can be coerced to a Number\n\t */\n\tOwl.prototype.isNumeric = function(number) {\n\t\treturn !isNaN(parseFloat(number));\n\t};\n\n\t/**\n\t * Gets the difference of two vectors.\n\t * @todo #261\n\t * @protected\n\t * @param {Object} - The first vector.\n\t * @param {Object} - The second vector.\n\t * @returns {Object} - The difference.\n\t */\n\tOwl.prototype.difference = function(first, second) {\n\t\treturn {\n\t\t\tx: first.x - second.x,\n\t\t\ty: first.y - second.y\n\t\t};\n\t};\n\n\t/**\n\t * The jQuery Plugin for the Owl Carousel\n\t * @todo Navigation plugin `next` and `prev`\n\t * @public\n\t */\n\t$.fn.owlCarousel = function(option) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\t\treturn this.each(function() {\n\t\t\tvar $this = $(this),\n\t\t\t\tdata = $this.data('owl.carousel');\n\n\t\t\tif (!data) {\n\t\t\t\tdata = new Owl(this, typeof option == 'object' && option);\n\t\t\t\t$this.data('owl.carousel', data);\n\n\t\t\t\t$.each([\n\t\t\t\t\t'next', 'prev', 'to', 'destroy', 'refresh', 'replace', 'add', 'remove'\n\t\t\t\t], function(i, event) {\n\t\t\t\t\tdata.register({ type: Owl.Type.Event, name: event });\n\t\t\t\t\tdata.$element.on(event + '.owl.carousel.core', $.proxy(function(e) {\n\t\t\t\t\t\tif (e.namespace && e.relatedTarget !== this) {\n\t\t\t\t\t\t\tthis.suppress([ event ]);\n\t\t\t\t\t\t\tdata[event].apply(this, [].slice.call(arguments, 1));\n\t\t\t\t\t\t\tthis.release([ event ]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, data));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (typeof option == 'string' && option.charAt(0) !== '_') {\n\t\t\t\tdata[option].apply(data, args);\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n\t * The constructor for the jQuery Plugin\n\t * @public\n\t */\n\t$.fn.owlCarousel.Constructor = Owl;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * AutoRefresh Plugin\n * @version 2.1.0\n * @author Artus Kolanowski\n * @author Saurabh Sharma\n * @license The MIT License (MIT)\n */\n;(function($, window, document, undefined) {\n\n\t/**\n\t * Creates the auto refresh plugin.\n\t * @class The Auto Refresh Plugin\n\t * @param {Owl} carousel - The Owl Carousel\n\t */\n\tvar AutoRefresh = function(carousel) {\n\t\t/**\n\t\t * Reference to the core.\n\t\t * @protected\n\t\t * @type {Owl}\n\t\t */\n\t\tthis._core = carousel;\n\n\t\t/**\n\t\t * Refresh interval.\n\t\t * @protected\n\t\t * @type {number}\n\t\t */\n\t\tthis._interval = null;\n\n\t\t/**\n\t\t * Whether the element is currently visible or not.\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._visible = null;\n\n\t\t/**\n\t\t * All event handlers.\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._handlers = {\n\t\t\t'initialized.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && this._core.settings.autoRefresh) {\n\t\t\t\t\tthis.watch();\n\t\t\t\t}\n\t\t\t}, this)\n\t\t};\n\n\t\t// set default options\n\t\tthis._core.options = $.extend({}, AutoRefresh.Defaults, this._core.options);\n\n\t\t// register event handlers\n\t\tthis._core.$element.on(this._handlers);\n\t};\n\n\t/**\n\t * Default options.\n\t * @public\n\t */\n\tAutoRefresh.Defaults = {\n\t\tautoRefresh: true,\n\t\tautoRefreshInterval: 500\n\t};\n\n\t/**\n\t * Watches the element.\n\t */\n\tAutoRefresh.prototype.watch = function() {\n\t\tif (this._interval) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._visible = this._core.$element.is(':visible');\n\t\tthis._interval = window.setInterval($.proxy(this.refresh, this), this._core.settings.autoRefreshInterval);\n\t};\n\n\t/**\n\t * Refreshes the element.\n\t */\n\tAutoRefresh.prototype.refresh = function() {\n\t\tif (this._core.$element.is(':visible') === this._visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._visible = !this._visible;\n\n\t\tthis._core.$element.toggleClass('owl-hidden', !this._visible);\n\n\t\tthis._visible && (this._core.invalidate('width') && this._core.refresh());\n\t};\n\n\t/**\n\t * Destroys the plugin.\n\t */\n\tAutoRefresh.prototype.destroy = function() {\n\t\tvar handler, property;\n\n\t\twindow.clearInterval(this._interval);\n\n\t\tfor (handler in this._handlers) {\n\t\t\tthis._core.$element.off(handler, this._handlers[handler]);\n\t\t}\n\t\tfor (property in Object.getOwnPropertyNames(this)) {\n\t\t\ttypeof this[property] != 'function' && (this[property] = null);\n\t\t}\n\t};\n\n\t$.fn.owlCarousel.Constructor.Plugins.AutoRefresh = AutoRefresh;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * Lazy Plugin\n * @version 2.1.0\n * @author Bartosz Wojciechowski\n * @author Saurabh Sharma\n * @license The MIT License (MIT)\n */\n;(function($, window, document, undefined) {\n\n\t/**\n\t * Creates the lazy plugin.\n\t * @class The Lazy Plugin\n\t * @param {Owl} carousel - The Owl Carousel\n\t */\n\tvar Lazy = function(carousel) {\n\n\t\t/**\n\t\t * Reference to the core.\n\t\t * @protected\n\t\t * @type {Owl}\n\t\t */\n\t\tthis._core = carousel;\n\n\t\t/**\n\t\t * Already loaded items.\n\t\t * @protected\n\t\t * @type {Array.<jQuery>}\n\t\t */\n\t\tthis._loaded = [];\n\n\t\t/**\n\t\t * Event handlers.\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._handlers = {\n\t\t\t'initialized.owl.carousel change.owl.carousel resized.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (!e.namespace) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this._core.settings || !this._core.settings.lazyLoad) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ((e.property && e.property.name == 'position') || e.type == 'initialized') {\n\t\t\t\t\tvar settings = this._core.settings,\n\t\t\t\t\t\tn = (settings.center && Math.ceil(settings.items / 2) || settings.items),\n\t\t\t\t\t\ti = ((settings.center && n * -1) || 0),\n\t\t\t\t\t\tposition = (e.property && e.property.value !== undefined ? e.property.value : this._core.current()) + i,\n\t\t\t\t\t\tclones = this._core.clones().length,\n\t\t\t\t\t\tload = $.proxy(function(i, v) { this.load(v) }, this);\n\n\t\t\t\t\twhile (i++ < n) {\n\t\t\t\t\t\tthis.load(clones / 2 + this._core.relative(position));\n\t\t\t\t\t\tclones && $.each(this._core.clones(this._core.relative(position)), load);\n\t\t\t\t\t\tposition++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this)\n\t\t};\n\n\t\t// set the default options\n\t\tthis._core.options = $.extend({}, Lazy.Defaults, this._core.options);\n\n\t\t// register event handler\n\t\tthis._core.$element.on(this._handlers);\n\t};\n\n\t/**\n\t * Default options.\n\t * @public\n\t */\n\tLazy.Defaults = {\n\t\tlazyLoad: false\n\t};\n\n\t/**\n\t * Loads all resources of an item at the specified position.\n\t * @param {Number} position - The absolute position of the item.\n\t * @protected\n\t */\n\tLazy.prototype.load = function(position) {\n\t\tvar $item = this._core.$stage.children().eq(position),\n\t\t\t$elements = $item && $item.find('.owl-lazy');\n\n\t\tif (!$elements || $.inArray($item.get(0), this._loaded) > -1) {\n\t\t\treturn;\n\t\t}\n\n\t\t$elements.each($.proxy(function(index, element) {\n\t\t\tvar $element = $(element), image,\n\t\t\t\turl = (window.devicePixelRatio > 1 && $element.attr('data-src-retina')) || $element.attr('data-src');\n\n\t\t\tthis._core.trigger('load', { element: $element, url: url }, 'lazy');\n\n\t\t\tif ($element.is('img')) {\n\t\t\t\t$element.one('load.owl.lazy', $.proxy(function() {\n\t\t\t\t\t$element.css('opacity', 1);\n\t\t\t\t\tthis._core.trigger('loaded', { element: $element, url: url }, 'lazy');\n\t\t\t\t}, this)).attr('src', url);\n\t\t\t} else {\n\t\t\t\timage = new Image();\n\t\t\t\timage.onload = $.proxy(function() {\n\t\t\t\t\t$element.css({\n\t\t\t\t\t\t'background-image': 'url(\"' + url + '\")',\n\t\t\t\t\t\t'opacity': '1'\n\t\t\t\t\t});\n\t\t\t\t\tthis._core.trigger('loaded', { element: $element, url: url }, 'lazy');\n\t\t\t\t}, this);\n\t\t\t\timage.src = url;\n\t\t\t}\n\t\t}, this));\n\n\t\tthis._loaded.push($item.get(0));\n\t};\n\n\t/**\n\t * Destroys the plugin.\n\t * @public\n\t */\n\tLazy.prototype.destroy = function() {\n\t\tvar handler, property;\n\n\t\tfor (handler in this.handlers) {\n\t\t\tthis._core.$element.off(handler, this.handlers[handler]);\n\t\t}\n\t\tfor (property in Object.getOwnPropertyNames(this)) {\n\t\t\ttypeof this[property] != 'function' && (this[property] = null);\n\t\t}\n\t};\n\n\t$.fn.owlCarousel.Constructor.Plugins.Lazy = Lazy;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * AutoHeight Plugin\n * @version 2.1.0\n * @author Bartosz Wojciechowski\n * @author Saurabh Sharma\n * @license The MIT License (MIT)\n */\n;(function($, window, document, undefined) {\n\n\t/**\n\t * Creates the auto height plugin.\n\t * @class The Auto Height Plugin\n\t * @param {Owl} carousel - The Owl Carousel\n\t */\n\tvar AutoHeight = function(carousel) {\n\t\t/**\n\t\t * Reference to the core.\n\t\t * @protected\n\t\t * @type {Owl}\n\t\t */\n\t\tthis._core = carousel;\n\n\t\t/**\n\t\t * All event handlers.\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._handlers = {\n\t\t\t'initialized.owl.carousel refreshed.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && this._core.settings.autoHeight) {\n\t\t\t\t\tthis.update();\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'changed.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && this._core.settings.autoHeight && e.property.name == 'position'){\n\t\t\t\t\tthis.update();\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'loaded.owl.lazy': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && this._core.settings.autoHeight\n\t\t\t\t\t&& e.element.closest('.' + this._core.settings.itemClass).index() === this._core.current()) {\n\t\t\t\t\tthis.update();\n\t\t\t\t}\n\t\t\t}, this)\n\t\t};\n\n\t\t// set default options\n\t\tthis._core.options = $.extend({}, AutoHeight.Defaults, this._core.options);\n\n\t\t// register event handlers\n\t\tthis._core.$element.on(this._handlers);\n\t};\n\n\t/**\n\t * Default options.\n\t * @public\n\t */\n\tAutoHeight.Defaults = {\n\t\tautoHeight: false,\n\t\tautoHeightClass: 'owl-height'\n\t};\n\n\t/**\n\t * Updates the view.\n\t */\n\tAutoHeight.prototype.update = function() {\n\t\tvar start = this._core._current,\n\t\t\tend = start + this._core.settings.items,\n\t\t\tvisible = this._core.$stage.children().toArray().slice(start, end),\n\t\t\theights = [],\n\t\t\tmaxheight = 0;\n\n\t\t$.each(visible, function(index, item) {\n\t\t\theights.push($(item).height());\n\t\t});\n\n\t\tmaxheight = Math.max.apply(null, heights);\n\n\t\tthis._core.$stage.parent()\n\t\t\t.height(maxheight)\n\t\t\t.addClass(this._core.settings.autoHeightClass);\n\t};\n\n\tAutoHeight.prototype.destroy = function() {\n\t\tvar handler, property;\n\n\t\tfor (handler in this._handlers) {\n\t\t\tthis._core.$element.off(handler, this._handlers[handler]);\n\t\t}\n\t\tfor (property in Object.getOwnPropertyNames(this)) {\n\t\t\ttypeof this[property] != 'function' && (this[property] = null);\n\t\t}\n\t};\n\n\t$.fn.owlCarousel.Constructor.Plugins.AutoHeight = AutoHeight;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * Video Plugin\n * @version 2.1.0\n * @author Bartosz Wojciechowski\n * @author Saurabh Sharma\n * @license The MIT License (MIT)\n */\n;(function($, window, document, undefined) {\n\n\t/**\n\t * Creates the video plugin.\n\t * @class The Video Plugin\n\t * @param {Owl} carousel - The Owl Carousel\n\t */\n\tvar Video = function(carousel) {\n\t\t/**\n\t\t * Reference to the core.\n\t\t * @protected\n\t\t * @type {Owl}\n\t\t */\n\t\tthis._core = carousel;\n\n\t\t/**\n\t\t * Cache all video URLs.\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._videos = {};\n\n\t\t/**\n\t\t * Current playing item.\n\t\t * @protected\n\t\t * @type {jQuery}\n\t\t */\n\t\tthis._playing = null;\n\n\t\t/**\n\t\t * All event handlers.\n\t\t * @todo The cloned content removale is too late\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._handlers = {\n\t\t\t'initialized.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace) {\n\t\t\t\t\tthis._core.register({ type: 'state', name: 'playing', tags: [ 'interacting' ] });\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'resize.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && this._core.settings.video && this.isInFullScreen()) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'refreshed.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && this._core.is('resizing')) {\n\t\t\t\t\tthis._core.$stage.find('.cloned .owl-video-frame').remove();\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'changed.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && e.property.name === 'position' && this._playing) {\n\t\t\t\t\tthis.stop();\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'prepared.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (!e.namespace) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar $element = $(e.content).find('.owl-video');\n\n\t\t\t\tif ($element.length) {\n\t\t\t\t\t$element.css('display', 'none');\n\t\t\t\t\tthis.fetch($element, $(e.content));\n\t\t\t\t}\n\t\t\t}, this)\n\t\t};\n\n\t\t// set default options\n\t\tthis._core.options = $.extend({}, Video.Defaults, this._core.options);\n\n\t\t// register event handlers\n\t\tthis._core.$element.on(this._handlers);\n\n\t\tthis._core.$element.on('click.owl.video', '.owl-video-play-icon', $.proxy(function(e) {\n\t\t\tthis.play(e);\n\t\t}, this));\n\t};\n\n\t/**\n\t * Default options.\n\t * @public\n\t */\n\tVideo.Defaults = {\n\t\tvideo: false,\n\t\tvideoHeight: false,\n\t\tvideoWidth: false\n\t};\n\n\t/**\n\t * Gets the video ID and the type (YouTube/Vimeo/vzaar only).\n\t * @protected\n\t * @param {jQuery} target - The target containing the video data.\n\t * @param {jQuery} item - The item containing the video.\n\t */\n\tVideo.prototype.fetch = function(target, item) {\n\t\t\tvar type = (function() {\n\t\t\t\t\tif (target.attr('data-vimeo-id')) {\n\t\t\t\t\t\treturn 'vimeo';\n\t\t\t\t\t} else if (target.attr('data-vzaar-id')) {\n\t\t\t\t\t\treturn 'vzaar'\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 'youtube';\n\t\t\t\t\t}\n\t\t\t\t})(),\n\t\t\t\tid = target.attr('data-vimeo-id') || target.attr('data-youtube-id') || target.attr('data-vzaar-id'),\n\t\t\t\twidth = target.attr('data-width') || this._core.settings.videoWidth,\n\t\t\t\theight = target.attr('data-height') || this._core.settings.videoHeight,\n\t\t\t\turl = target.attr('href');\n\n\t\tif (url) {\n\n\t\t\t/*\n\t\t\t\t\tParses the id's out of the following urls (and probably more):\n\t\t\t\t\thttps://www.youtube.com/watch?v=:id\n\t\t\t\t\thttps://youtu.be/:id\n\t\t\t\t\thttps://vimeo.com/:id\n\t\t\t\t\thttps://vimeo.com/channels/:channel/:id\n\t\t\t\t\thttps://vimeo.com/groups/:group/videos/:id\n\t\t\t\t\thttps://app.vzaar.com/videos/:id\n\n\t\t\t\t\tVisual example: https://regexper.com/#(http%3A%7Chttps%3A%7C)%5C%2F%5C%2F(player.%7Cwww.%7Capp.)%3F(vimeo%5C.com%7Cyoutu(be%5C.com%7C%5C.be%7Cbe%5C.googleapis%5C.com)%7Cvzaar%5C.com)%5C%2F(video%5C%2F%7Cvideos%5C%2F%7Cembed%5C%2F%7Cchannels%5C%2F.%2B%5C%2F%7Cgroups%5C%2F.%2B%5C%2F%7Cwatch%5C%3Fv%3D%7Cv%5C%2F)%3F(%5BA-Za-z0-9._%25-%5D*)(%5C%26%5CS%2B)%3F\n\t\t\t*/\n\n\t\t\tid = url.match(/(http:|https:|)\\/\\/(player.|www.|app.)?(vimeo\\.com|youtu(be\\.com|\\.be|be\\.googleapis\\.com)|vzaar\\.com)\\/(video\\/|videos\\/|embed\\/|channels\\/.+\\/|groups\\/.+\\/|watch\\?v=|v\\/)?([A-Za-z0-9._%-]*)(\\&\\S+)?/);\n\n\t\t\tif (id[3].indexOf('youtu') > -1) {\n\t\t\t\ttype = 'youtube';\n\t\t\t} else if (id[3].indexOf('vimeo') > -1) {\n\t\t\t\ttype = 'vimeo';\n\t\t\t} else if (id[3].indexOf('vzaar') > -1) {\n\t\t\t\ttype = 'vzaar';\n\t\t\t} else {\n\t\t\t\tthrow new Error('Video URL not supported.');\n\t\t\t}\n\t\t\tid = id[6];\n\t\t} else {\n\t\t\tthrow new Error('Missing video URL.');\n\t\t}\n\n\t\tthis._videos[url] = {\n\t\t\ttype: type,\n\t\t\tid: id,\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\n\t\titem.attr('data-video', url);\n\n\t\tthis.thumbnail(target, this._videos[url]);\n\t};\n\n\t/**\n\t * Creates video thumbnail.\n\t * @protected\n\t * @param {jQuery} target - The target containing the video data.\n\t * @param {Object} info - The video info object.\n\t * @see `fetch`\n\t */\n\tVideo.prototype.thumbnail = function(target, video) {\n\t\tvar tnLink,\n\t\t\ticon,\n\t\t\tpath,\n\t\t\tdimensions = video.width && video.height ? 'style=\"width:' + video.width + 'px;height:' + video.height + 'px;\"' : '',\n\t\t\tcustomTn = target.find('img'),\n\t\t\tsrcType = 'src',\n\t\t\tlazyClass = '',\n\t\t\tsettings = this._core.settings,\n\t\t\tcreate = function(path) {\n\t\t\t\ticon = '<div class=\"owl-video-play-icon\"></div>';\n\n\t\t\t\tif (settings.lazyLoad) {\n\t\t\t\t\ttnLink = '<div class=\"owl-video-tn ' + lazyClass + '\" ' + srcType + '=\"' + path + '\"></div>';\n\t\t\t\t} else {\n\t\t\t\t\ttnLink = '<div class=\"owl-video-tn\" style=\"opacity:1;background-image:url(' + path + ')\"></div>';\n\t\t\t\t}\n\t\t\t\ttarget.after(tnLink);\n\t\t\t\ttarget.after(icon);\n\t\t\t};\n\n\t\t// wrap video content into owl-video-wrapper div\n\t\ttarget.wrap('<div class=\"owl-video-wrapper\"' + dimensions + '></div>');\n\n\t\tif (this._core.settings.lazyLoad) {\n\t\t\tsrcType = 'data-src';\n\t\t\tlazyClass = 'owl-lazy';\n\t\t}\n\n\t\t// custom thumbnail\n\t\tif (customTn.length) {\n\t\t\tcreate(customTn.attr(srcType));\n\t\t\tcustomTn.remove();\n\t\t\treturn false;\n\t\t}\n\n\t\tif (video.type === 'youtube') {\n\t\t\tpath = \"//img.youtube.com/vi/\" + video.id + \"/hqdefault.jpg\";\n\t\t\tcreate(path);\n\t\t} else if (video.type === 'vimeo') {\n\t\t\t$.ajax({\n\t\t\t\ttype: 'GET',\n\t\t\t\turl: '//vimeo.com/api/v2/video/' + video.id + '.json',\n\t\t\t\tjsonp: 'callback',\n\t\t\t\tdataType: 'jsonp',\n\t\t\t\tsuccess: function(data) {\n\t\t\t\t\tpath = data[0].thumbnail_large;\n\t\t\t\t\tcreate(path);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (video.type === 'vzaar') {\n\t\t\t$.ajax({\n\t\t\t\ttype: 'GET',\n\t\t\t\turl: '//vzaar.com/api/videos/' + video.id + '.json',\n\t\t\t\tjsonp: 'callback',\n\t\t\t\tdataType: 'jsonp',\n\t\t\t\tsuccess: function(data) {\n\t\t\t\t\tpath = data.framegrab_url;\n\t\t\t\t\tcreate(path);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Stops the current video.\n\t * @public\n\t */\n\tVideo.prototype.stop = function() {\n\t\tthis._core.trigger('stop', null, 'video');\n\t\tthis._playing.find('.owl-video-frame').remove();\n\t\tthis._playing.removeClass('owl-video-playing');\n\t\tthis._playing = null;\n\t\tthis._core.leave('playing');\n\t\tthis._core.trigger('stopped', null, 'video');\n\t};\n\n\t/**\n\t * Starts the current video.\n\t * @public\n\t * @param {Event} event - The event arguments.\n\t */\n\tVideo.prototype.play = function(event) {\n\t\tvar target = $(event.target),\n\t\t\titem = target.closest('.' + this._core.settings.itemClass),\n\t\t\tvideo = this._videos[item.attr('data-video')],\n\t\t\twidth = video.width || '100%',\n\t\t\theight = video.height || this._core.$stage.height(),\n\t\t\thtml;\n\n\t\tif (this._playing) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._core.enter('playing');\n\t\tthis._core.trigger('play', null, 'video');\n\n\t\titem = this._core.items(this._core.relative(item.index()));\n\n\t\tthis._core.reset(item.index());\n\n\t\tif (video.type === 'youtube') {\n\t\t\thtml = '<iframe width=\"' + width + '\" height=\"' + height + '\" src=\"//www.youtube.com/embed/' +\n\t\t\t\tvideo.id + '?autoplay=1&rel=0&v=' + video.id + '\" frameborder=\"0\" allowfullscreen></iframe>';\n\t\t} else if (video.type === 'vimeo') {\n\t\t\thtml = '<iframe src=\"//player.vimeo.com/video/' + video.id +\n\t\t\t\t'?autoplay=1\" width=\"' + width + '\" height=\"' + height +\n\t\t\t\t'\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>';\n\t\t} else if (video.type === 'vzaar') {\n\t\t\thtml = '<iframe frameborder=\"0\"' + 'height=\"' + height + '\"' + 'width=\"' + width +\n\t\t\t\t'\" allowfullscreen mozallowfullscreen webkitAllowFullScreen ' +\n\t\t\t\t'src=\"//view.vzaar.com/' + video.id + '/player?autoplay=true\"></iframe>';\n\t\t}\n\n\t\t$('<div class=\"owl-video-frame\">' + html + '</div>').insertAfter(item.find('.owl-video'));\n\n\t\tthis._playing = item.addClass('owl-video-playing');\n\t};\n\n\t/**\n\t * Checks whether an video is currently in full screen mode or not.\n\t * @todo Bad style because looks like a readonly method but changes members.\n\t * @protected\n\t * @returns {Boolean}\n\t */\n\tVideo.prototype.isInFullScreen = function() {\n\t\tvar element = document.fullscreenElement || document.mozFullScreenElement ||\n\t\t\t\tdocument.webkitFullscreenElement;\n\n\t\treturn element && $(element).parent().hasClass('owl-video-frame');\n\t};\n\n\t/**\n\t * Destroys the plugin.\n\t */\n\tVideo.prototype.destroy = function() {\n\t\tvar handler, property;\n\n\t\tthis._core.$element.off('click.owl.video');\n\n\t\tfor (handler in this._handlers) {\n\t\t\tthis._core.$element.off(handler, this._handlers[handler]);\n\t\t}\n\t\tfor (property in Object.getOwnPropertyNames(this)) {\n\t\t\ttypeof this[property] != 'function' && (this[property] = null);\n\t\t}\n\t};\n\n\t$.fn.owlCarousel.Constructor.Plugins.Video = Video;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * Animate Plugin\n * @version 2.1.0\n * @author Bartosz Wojciechowski\n * @author Saurabh Sharma\n * @license The MIT License (MIT)\n */\n;(function($, window, document, undefined) {\n\n\t/**\n\t * Creates the animate plugin.\n\t * @class The Navigation Plugin\n\t * @param {Owl} scope - The Owl Carousel\n\t */\n\tvar Animate = function(scope) {\n\t\tthis.core = scope;\n\t\tthis.core.options = $.extend({}, Animate.Defaults, this.core.options);\n\t\tthis.swapping = true;\n\t\tthis.previous = undefined;\n\t\tthis.next = undefined;\n\n\t\tthis.handlers = {\n\t\t\t'change.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && e.property.name == 'position') {\n\t\t\t\t\tthis.previous = this.core.current();\n\t\t\t\t\tthis.next = e.property.value;\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'drag.owl.carousel dragged.owl.carousel translated.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace) {\n\t\t\t\t\tthis.swapping = e.type == 'translated';\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'translate.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && this.swapping && (this.core.options.animateOut || this.core.options.animateIn)) {\n\t\t\t\t\tthis.swap();\n\t\t\t\t}\n\t\t\t}, this)\n\t\t};\n\n\t\tthis.core.$element.on(this.handlers);\n\t};\n\n\t/**\n\t * Default options.\n\t * @public\n\t */\n\tAnimate.Defaults = {\n\t\tanimateOut: false,\n\t\tanimateIn: false\n\t};\n\n\t/**\n\t * Toggles the animation classes whenever an translations starts.\n\t * @protected\n\t * @returns {Boolean|undefined}\n\t */\n\tAnimate.prototype.swap = function() {\n\n\t\tif (this.core.settings.items !== 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!$.support.animation || !$.support.transition) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.core.speed(0);\n\n\t\tvar left,\n\t\t\tclear = $.proxy(this.clear, this),\n\t\t\tprevious = this.core.$stage.children().eq(this.previous),\n\t\t\tnext = this.core.$stage.children().eq(this.next),\n\t\t\tincoming = this.core.settings.animateIn,\n\t\t\toutgoing = this.core.settings.animateOut;\n\n\t\tif (this.core.current() === this.previous) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (outgoing) {\n\t\t\tleft = this.core.coordinates(this.previous) - this.core.coordinates(this.next);\n\t\t\tprevious.one($.support.animation.end, clear)\n\t\t\t\t.css( { 'left': left + 'px' } )\n\t\t\t\t.addClass('animated owl-animated-out')\n\t\t\t\t.addClass(outgoing);\n\t\t}\n\n\t\tif (incoming) {\n\t\t\tnext.one($.support.animation.end, clear)\n\t\t\t\t.addClass('animated owl-animated-in')\n\t\t\t\t.addClass(incoming);\n\t\t}\n\t};\n\n\tAnimate.prototype.clear = function(e) {\n\t\t$(e.target).css( { 'left': '' } )\n\t\t\t.removeClass('animated owl-animated-out owl-animated-in')\n\t\t\t.removeClass(this.core.settings.animateIn)\n\t\t\t.removeClass(this.core.settings.animateOut);\n\t\tthis.core.onTransitionEnd();\n\t};\n\n\t/**\n\t * Destroys the plugin.\n\t * @public\n\t */\n\tAnimate.prototype.destroy = function() {\n\t\tvar handler, property;\n\n\t\tfor (handler in this.handlers) {\n\t\t\tthis.core.$element.off(handler, this.handlers[handler]);\n\t\t}\n\t\tfor (property in Object.getOwnPropertyNames(this)) {\n\t\t\ttypeof this[property] != 'function' && (this[property] = null);\n\t\t}\n\t};\n\n\t$.fn.owlCarousel.Constructor.Plugins.Animate = Animate;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * Autoplay Plugin\n * @version 2.1.0\n * @author Bartosz Wojciechowski\n * @author Artus Kolanowski\n * @author Saurabh Sharma\n * @license The MIT License (MIT)\n */\n;(function($, window, document, undefined) {\n\n\t/**\n\t * Creates the autoplay plugin.\n\t * @class The Autoplay Plugin\n\t * @param {Owl} scope - The Owl Carousel\n\t */\n\tvar Autoplay = function(carousel) {\n\t\t/**\n\t\t * Reference to the core.\n\t\t * @protected\n\t\t * @type {Owl}\n\t\t */\n\t\tthis._core = carousel;\n\n\t\t/**\n\t\t * The autoplay timeout.\n\t\t * @type {Timeout}\n\t\t */\n\t\tthis._timeout = null;\n\n\t\t/**\n\t\t * Indicates whenever the autoplay is paused.\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._paused = false;\n\n\t\t/**\n\t\t * All event handlers.\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._handlers = {\n\t\t\t'changed.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && e.property.name === 'settings') {\n\t\t\t\t\tif (this._core.settings.autoplay) {\n\t\t\t\t\t\tthis.play();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t}\n\t\t\t\t} else if (e.namespace && e.property.name === 'position') {\n\t\t\t\t\t//console.log('play?', e);\n\t\t\t\t\tif (this._core.settings.autoplay) {\n\t\t\t\t\t\tthis._setAutoPlayInterval();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'initialized.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && this._core.settings.autoplay) {\n\t\t\t\t\tthis.play();\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'play.owl.autoplay': $.proxy(function(e, t, s) {\n\t\t\t\tif (e.namespace) {\n\t\t\t\t\tthis.play(t, s);\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'stop.owl.autoplay': $.proxy(function(e) {\n\t\t\t\tif (e.namespace) {\n\t\t\t\t\tthis.stop();\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'mouseover.owl.autoplay': $.proxy(function() {\n\t\t\t\tif (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'mouseleave.owl.autoplay': $.proxy(function() {\n\t\t\t\tif (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {\n\t\t\t\t\tthis.play();\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'touchstart.owl.core': $.proxy(function() {\n\t\t\t\tif (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'touchend.owl.core': $.proxy(function() {\n\t\t\t\tif (this._core.settings.autoplayHoverPause) {\n\t\t\t\t\tthis.play();\n\t\t\t\t}\n\t\t\t}, this)\n\t\t};\n\n\t\t// register event handlers\n\t\tthis._core.$element.on(this._handlers);\n\n\t\t// set default options\n\t\tthis._core.options = $.extend({}, Autoplay.Defaults, this._core.options);\n\t};\n\n\t/**\n\t * Default options.\n\t * @public\n\t */\n\tAutoplay.Defaults = {\n\t\tautoplay: false,\n\t\tautoplayTimeout: 5000,\n\t\tautoplayHoverPause: false,\n\t\tautoplaySpeed: false\n\t};\n\n\t/**\n\t * Starts the autoplay.\n\t * @public\n\t * @param {Number} [timeout] - The interval before the next animation starts.\n\t * @param {Number} [speed] - The animation speed for the animations.\n\t */\n\tAutoplay.prototype.play = function(timeout, speed) {\n\t\tthis._paused = false;\n\n\t\tif (this._core.is('rotating')) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._core.enter('rotating');\n\n\t\tthis._setAutoPlayInterval();\n\t};\n\n\t/**\n\t * Gets a new timeout\n\t * @private\n\t * @param {Number} [timeout] - The interval before the next animation starts.\n\t * @param {Number} [speed] - The animation speed for the animations.\n\t * @return {Timeout}\n\t */\n\tAutoplay.prototype._getNextTimeout = function(timeout, speed) {\n\t\tif ( this._timeout ) {\n\t\t\twindow.clearTimeout(this._timeout);\n\t\t}\n\t\treturn window.setTimeout($.proxy(function() {\n\t\t\tif (this._paused || this._core.is('busy') || this._core.is('interacting') || document.hidden) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._core.next(speed || this._core.settings.autoplaySpeed);\n\t\t}, this), timeout || this._core.settings.autoplayTimeout);\n\t};\n\n\t/**\n\t * Sets autoplay in motion.\n\t * @private\n\t */\n\tAutoplay.prototype._setAutoPlayInterval = function() {\n\t\tthis._timeout = this._getNextTimeout();\n\t};\n\n\t/**\n\t * Stops the autoplay.\n\t * @public\n\t */\n\tAutoplay.prototype.stop = function() {\n\t\tif (!this._core.is('rotating')) {\n\t\t\treturn;\n\t\t}\n\n\t\twindow.clearTimeout(this._timeout);\n\t\tthis._core.leave('rotating');\n\t};\n\n\t/**\n\t * Stops the autoplay.\n\t * @public\n\t */\n\tAutoplay.prototype.pause = function() {\n\t\tif (!this._core.is('rotating')) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._paused = true;\n\t};\n\n\t/**\n\t * Destroys the plugin.\n\t */\n\tAutoplay.prototype.destroy = function() {\n\t\tvar handler, property;\n\n\t\tthis.stop();\n\n\t\tfor (handler in this._handlers) {\n\t\t\tthis._core.$element.off(handler, this._handlers[handler]);\n\t\t}\n\t\tfor (property in Object.getOwnPropertyNames(this)) {\n\t\t\ttypeof this[property] != 'function' && (this[property] = null);\n\t\t}\n\t};\n\n\t$.fn.owlCarousel.Constructor.Plugins.autoplay = Autoplay;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * Navigation Plugin\n * @version 2.1.0\n * @author Artus Kolanowski\n * @author Saurabh Sharma\n * @license The MIT License (MIT)\n */\n;(function($, window, document, undefined) {\n\t'use strict';\n\n\t/**\n\t * Creates the navigation plugin.\n\t * @class The Navigation Plugin\n\t * @param {Owl} carousel - The Owl Carousel.\n\t */\n\tvar Navigation = function(carousel) {\n\t\t/**\n\t\t * Reference to the core.\n\t\t * @protected\n\t\t * @type {Owl}\n\t\t */\n\t\tthis._core = carousel;\n\n\t\t/**\n\t\t * Indicates whether the plugin is initialized or not.\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._initialized = false;\n\n\t\t/**\n\t\t * The current paging indexes.\n\t\t * @protected\n\t\t * @type {Array}\n\t\t */\n\t\tthis._pages = [];\n\n\t\t/**\n\t\t * All DOM elements of the user interface.\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._controls = {};\n\n\t\t/**\n\t\t * Markup for an indicator.\n\t\t * @protected\n\t\t * @type {Array.<String>}\n\t\t */\n\t\tthis._templates = [];\n\n\t\t/**\n\t\t * The carousel element.\n\t\t * @type {jQuery}\n\t\t */\n\t\tthis.$element = this._core.$element;\n\n\t\t/**\n\t\t * Overridden methods of the carousel.\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._overrides = {\n\t\t\tnext: this._core.next,\n\t\t\tprev: this._core.prev,\n\t\t\tto: this._core.to\n\t\t};\n\n\t\t/**\n\t\t * All event handlers.\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._handlers = {\n\t\t\t'prepared.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && this._core.settings.dotsData) {\n\t\t\t\t\tthis._templates.push('<div class=\"' + this._core.settings.dotClass + '\">' +\n\t\t\t\t\t\t$(e.content).find('[data-dot]').addBack('[data-dot]').attr('data-dot') + '</div>');\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'added.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && this._core.settings.dotsData) {\n\t\t\t\t\tthis._templates.splice(e.position, 0, this._templates.pop());\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'remove.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && this._core.settings.dotsData) {\n\t\t\t\t\tthis._templates.splice(e.position, 1);\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'changed.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && e.property.name == 'position') {\n\t\t\t\t\tthis.draw();\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'initialized.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && !this._initialized) {\n\t\t\t\t\tthis._core.trigger('initialize', null, 'navigation');\n\t\t\t\t\tthis.initialize();\n\t\t\t\t\tthis.update();\n\t\t\t\t\tthis.draw();\n\t\t\t\t\tthis._initialized = true;\n\t\t\t\t\tthis._core.trigger('initialized', null, 'navigation');\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'refreshed.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && this._initialized) {\n\t\t\t\t\tthis._core.trigger('refresh', null, 'navigation');\n\t\t\t\t\tthis.update();\n\t\t\t\t\tthis.draw();\n\t\t\t\t\tthis._core.trigger('refreshed', null, 'navigation');\n\t\t\t\t}\n\t\t\t}, this)\n\t\t};\n\n\t\t// set default options\n\t\tthis._core.options = $.extend({}, Navigation.Defaults, this._core.options);\n\n\t\t// register event handlers\n\t\tthis.$element.on(this._handlers);\n\t};\n\n\t/**\n\t * Default options.\n\t * @public\n\t * @todo Rename `slideBy` to `navBy`\n\t */\n\tNavigation.Defaults = {\n\t\tnav: false,\n\t\tnavText: [ 'prev', 'next' ],\n\t\tnavSpeed: false,\n\t\tnavElement: 'div',\n\t\tnavContainer: false,\n\t\tnavContainerClass: 'owl-nav',\n\t\tnavClass: [ 'owl-prev', 'owl-next' ],\n\t\tslideBy: 1,\n\t\tdotClass: 'owl-dot',\n\t\tdotsClass: 'owl-dots',\n\t\tdots: true,\n\t\tdotsEach: false,\n\t\tdotsData: false,\n\t\tdotsSpeed: false,\n\t\tdotsContainer: false\n\t};\n\n\t/**\n\t * Initializes the layout of the plugin and extends the carousel.\n\t * @protected\n\t */\n\tNavigation.prototype.initialize = function() {\n\t\tvar override,\n\t\t\tsettings = this._core.settings;\n\n\t\t// create DOM structure for relative navigation\n\t\tthis._controls.$relative = (settings.navContainer ? $(settings.navContainer)\n\t\t\t: $('<div>').addClass(settings.navContainerClass).appendTo(this.$element)).addClass('disabled');\n\n\t\tthis._controls.$previous = $('<' + settings.navElement + '>')\n\t\t\t.addClass(settings.navClass[0])\n\t\t\t.html(settings.navText[0])\n\t\t\t.prependTo(this._controls.$relative)\n\t\t\t.on('click', $.proxy(function(e) {\n\t\t\t\tthis.prev(settings.navSpeed);\n\t\t\t}, this));\n\t\tthis._controls.$next = $('<' + settings.navElement + '>')\n\t\t\t.addClass(settings.navClass[1])\n\t\t\t.html(settings.navText[1])\n\t\t\t.appendTo(this._controls.$relative)\n\t\t\t.on('click', $.proxy(function(e) {\n\t\t\t\tthis.next(settings.navSpeed);\n\t\t\t}, this));\n\n\t\t// create DOM structure for absolute navigation\n\t\tif (!settings.dotsData) {\n\t\t\tthis._templates = [ $('<div>')\n\t\t\t\t.addClass(settings.dotClass)\n\t\t\t\t.append($('<span>'))\n\t\t\t\t.prop('outerHTML') ];\n\t\t}\n\n\t\tthis._controls.$absolute = (settings.dotsContainer ? $(settings.dotsContainer)\n\t\t\t: $('<div>').addClass(settings.dotsClass).appendTo(this.$element)).addClass('disabled');\n\n\t\tthis._controls.$absolute.on('click', 'div', $.proxy(function(e) {\n\t\t\tvar index = $(e.target).parent().is(this._controls.$absolute)\n\t\t\t\t? $(e.target).index() : $(e.target).parent().index();\n\n\t\t\te.preventDefault();\n\n\t\t\tthis.to(index, settings.dotsSpeed);\n\t\t}, this));\n\n\t\t// override public methods of the carousel\n\t\tfor (override in this._overrides) {\n\t\t\tthis._core[override] = $.proxy(this[override], this);\n\t\t}\n\t};\n\n\t/**\n\t * Destroys the plugin.\n\t * @protected\n\t */\n\tNavigation.prototype.destroy = function() {\n\t\tvar handler, control, property, override;\n\n\t\tfor (handler in this._handlers) {\n\t\t\tthis.$element.off(handler, this._handlers[handler]);\n\t\t}\n\t\tfor (control in this._controls) {\n\t\t\tthis._controls[control].remove();\n\t\t}\n\t\tfor (override in this.overides) {\n\t\t\tthis._core[override] = this._overrides[override];\n\t\t}\n\t\tfor (property in Object.getOwnPropertyNames(this)) {\n\t\t\ttypeof this[property] != 'function' && (this[property] = null);\n\t\t}\n\t};\n\n\t/**\n\t * Updates the internal state.\n\t * @protected\n\t */\n\tNavigation.prototype.update = function() {\n\t\tvar i, j, k,\n\t\t\tlower = this._core.clones().length / 2,\n\t\t\tupper = lower + this._core.items().length,\n\t\t\tmaximum = this._core.maximum(true),\n\t\t\tsettings = this._core.settings,\n\t\t\tsize = settings.center || settings.autoWidth || settings.dotsData\n\t\t\t\t? 1 : settings.dotsEach || settings.items;\n\n\t\tif (settings.slideBy !== 'page') {\n\t\t\tsettings.slideBy = Math.min(settings.slideBy, settings.items);\n\t\t}\n\n\t\tif (settings.dots || settings.slideBy == 'page') {\n\t\t\tthis._pages = [];\n\n\t\t\tfor (i = lower, j = 0, k = 0; i < upper; i++) {\n\t\t\t\tif (j >= size || j === 0) {\n\t\t\t\t\tthis._pages.push({\n\t\t\t\t\t\tstart: Math.min(maximum, i - lower),\n\t\t\t\t\t\tend: i - lower + size - 1\n\t\t\t\t\t});\n\t\t\t\t\tif (Math.min(maximum, i - lower) === maximum) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tj = 0, ++k;\n\t\t\t\t}\n\t\t\t\tj += this._core.mergers(this._core.relative(i));\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Draws the user interface.\n\t * @todo The option `dotsData` wont work.\n\t * @protected\n\t */\n\tNavigation.prototype.draw = function() {\n\t\tvar difference,\n\t\t\tsettings = this._core.settings,\n\t\t\tdisabled = this._core.items().length <= settings.items,\n\t\t\tindex = this._core.relative(this._core.current()),\n\t\t\tloop = settings.loop || settings.rewind;\n\n\t\tthis._controls.$relative.toggleClass('disabled', !settings.nav || disabled);\n\n\t\tif (settings.nav) {\n\t\t\tthis._controls.$previous.toggleClass('disabled', !loop && index <= this._core.minimum(true));\n\t\t\tthis._controls.$next.toggleClass('disabled', !loop && index >= this._core.maximum(true));\n\t\t}\n\n\t\tthis._controls.$absolute.toggleClass('disabled', !settings.dots || disabled);\n\n\t\tif (settings.dots) {\n\t\t\tdifference = this._pages.length - this._controls.$absolute.children().length;\n\n\t\t\tif (settings.dotsData && difference !== 0) {\n\t\t\t\tthis._controls.$absolute.html(this._templates.join(''));\n\t\t\t} else if (difference > 0) {\n\t\t\t\tthis._controls.$absolute.append(new Array(difference + 1).join(this._templates[0]));\n\t\t\t} else if (difference < 0) {\n\t\t\t\tthis._controls.$absolute.children().slice(difference).remove();\n\t\t\t}\n\n\t\t\tthis._controls.$absolute.find('.active').removeClass('active');\n\t\t\tthis._controls.$absolute.children().eq($.inArray(this.current(), this._pages)).addClass('active');\n\t\t}\n\t};\n\n\t/**\n\t * Extends event data.\n\t * @protected\n\t * @param {Event} event - The event object which gets thrown.\n\t */\n\tNavigation.prototype.onTrigger = function(event) {\n\t\tvar settings = this._core.settings;\n\n\t\tevent.page = {\n\t\t\tindex: $.inArray(this.current(), this._pages),\n\t\t\tcount: this._pages.length,\n\t\t\tsize: settings && (settings.center || settings.autoWidth || settings.dotsData\n\t\t\t\t? 1 : settings.dotsEach || settings.items)\n\t\t};\n\t};\n\n\t/**\n\t * Gets the current page position of the carousel.\n\t * @protected\n\t * @returns {Number}\n\t */\n\tNavigation.prototype.current = function() {\n\t\tvar current = this._core.relative(this._core.current());\n\t\treturn $.grep(this._pages, $.proxy(function(page, index) {\n\t\t\treturn page.start <= current && page.end >= current;\n\t\t}, this)).pop();\n\t};\n\n\t/**\n\t * Gets the current succesor/predecessor position.\n\t * @protected\n\t * @returns {Number}\n\t */\n\tNavigation.prototype.getPosition = function(successor) {\n\t\tvar position, length,\n\t\t\tsettings = this._core.settings;\n\n\t\tif (settings.slideBy == 'page') {\n\t\t\tposition = $.inArray(this.current(), this._pages);\n\t\t\tlength = this._pages.length;\n\t\t\tsuccessor ? ++position : --position;\n\t\t\tposition = this._pages[((position % length) + length) % length].start;\n\t\t} else {\n\t\t\tposition = this._core.relative(this._core.current());\n\t\t\tlength = this._core.items().length;\n\t\t\tsuccessor ? position += settings.slideBy : position -= settings.slideBy;\n\t\t}\n\n\t\treturn position;\n\t};\n\n\t/**\n\t * Slides to the next item or page.\n\t * @public\n\t * @param {Number} [speed=false] - The time in milliseconds for the transition.\n\t */\n\tNavigation.prototype.next = function(speed) {\n\t\t$.proxy(this._overrides.to, this._core)(this.getPosition(true), speed);\n\t};\n\n\t/**\n\t * Slides to the previous item or page.\n\t * @public\n\t * @param {Number} [speed=false] - The time in milliseconds for the transition.\n\t */\n\tNavigation.prototype.prev = function(speed) {\n\t\t$.proxy(this._overrides.to, this._core)(this.getPosition(false), speed);\n\t};\n\n\t/**\n\t * Slides to the specified item or page.\n\t * @public\n\t * @param {Number} position - The position of the item or page.\n\t * @param {Number} [speed] - The time in milliseconds for the transition.\n\t * @param {Boolean} [standard=false] - Whether to use the standard behaviour or not.\n\t */\n\tNavigation.prototype.to = function(position, speed, standard) {\n\t\tvar length;\n\n\t\tif (!standard && this._pages.length) {\n\t\t\tlength = this._pages.length;\n\t\t\t$.proxy(this._overrides.to, this._core)(this._pages[((position % length) + length) % length].start, speed);\n\t\t} else {\n\t\t\t$.proxy(this._overrides.to, this._core)(position, speed);\n\t\t}\n\t};\n\n\t$.fn.owlCarousel.Constructor.Plugins.Navigation = Navigation;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * Hash Plugin\n * @version 2.1.0\n * @author Artus Kolanowski\n * @author Saurabh Sharma\n * @license The MIT License (MIT)\n */\n;(function($, window, document, undefined) {\n\t'use strict';\n\n\t/**\n\t * Creates the hash plugin.\n\t * @class The Hash Plugin\n\t * @param {Owl} carousel - The Owl Carousel\n\t */\n\tvar Hash = function(carousel) {\n\t\t/**\n\t\t * Reference to the core.\n\t\t * @protected\n\t\t * @type {Owl}\n\t\t */\n\t\tthis._core = carousel;\n\n\t\t/**\n\t\t * Hash index for the items.\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._hashes = {};\n\n\t\t/**\n\t\t * The carousel element.\n\t\t * @type {jQuery}\n\t\t */\n\t\tthis.$element = this._core.$element;\n\n\t\t/**\n\t\t * All event handlers.\n\t\t * @protected\n\t\t * @type {Object}\n\t\t */\n\t\tthis._handlers = {\n\t\t\t'initialized.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && this._core.settings.startPosition === 'URLHash') {\n\t\t\t\t\t$(window).trigger('hashchange.owl.navigation');\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'prepared.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace) {\n\t\t\t\t\tvar hash = $(e.content).find('[data-hash]').addBack('[data-hash]').attr('data-hash');\n\n\t\t\t\t\tif (!hash) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._hashes[hash] = e.content;\n\t\t\t\t}\n\t\t\t}, this),\n\t\t\t'changed.owl.carousel': $.proxy(function(e) {\n\t\t\t\tif (e.namespace && e.property.name === 'position') {\n\t\t\t\t\tvar current = this._core.items(this._core.relative(this._core.current())),\n\t\t\t\t\t\thash = $.map(this._hashes, function(item, hash) {\n\t\t\t\t\t\t\treturn item === current ? hash : null;\n\t\t\t\t\t\t}).join();\n\n\t\t\t\t\tif (!hash || window.location.hash.slice(1) === hash) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\twindow.location.hash = hash;\n\t\t\t\t}\n\t\t\t}, this)\n\t\t};\n\n\t\t// set default options\n\t\tthis._core.options = $.extend({}, Hash.Defaults, this._core.options);\n\n\t\t// register the event handlers\n\t\tthis.$element.on(this._handlers);\n\n\t\t// register event listener for hash navigation\n\t\t$(window).on('hashchange.owl.navigation', $.proxy(function(e) {\n\t\t\tvar hash = window.location.hash.substring(1),\n\t\t\t\titems = this._core.$stage.children(),\n\t\t\t\tposition = this._hashes[hash] && items.index(this._hashes[hash]);\n\n\t\t\tif (position === undefined || position === this._core.current()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._core.to(this._core.relative(position), false, true);\n\t\t}, this));\n\t};\n\n\t/**\n\t * Default options.\n\t * @public\n\t */\n\tHash.Defaults = {\n\t\tURLhashListener: false\n\t};\n\n\t/**\n\t * Destroys the plugin.\n\t * @public\n\t */\n\tHash.prototype.destroy = function() {\n\t\tvar handler, property;\n\n\t\t$(window).off('hashchange.owl.navigation');\n\n\t\tfor (handler in this._handlers) {\n\t\t\tthis._core.$element.off(handler, this._handlers[handler]);\n\t\t}\n\t\tfor (property in Object.getOwnPropertyNames(this)) {\n\t\t\ttypeof this[property] != 'function' && (this[property] = null);\n\t\t}\n\t};\n\n\t$.fn.owlCarousel.Constructor.Plugins.Hash = Hash;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * Support Plugin\n *\n * @version 2.1.0\n * @author Vivid Planet Software GmbH\n * @author Artus Kolanowski\n * @author Saurabh Sharma\n * @license The MIT License (MIT)\n */\n;(function($, window, document, undefined) {\n\n\tvar style = $('<support>').get(0).style,\n\t\tprefixes = 'Webkit Moz O ms'.split(' '),\n\t\tevents = {\n\t\t\ttransition: {\n\t\t\t\tend: {\n\t\t\t\t\tWebkitTransition: 'webkitTransitionEnd',\n\t\t\t\t\tMozTransition: 'transitionend',\n\t\t\t\t\tOTransition: 'oTransitionEnd',\n\t\t\t\t\ttransition: 'transitionend'\n\t\t\t\t}\n\t\t\t},\n\t\t\tanimation: {\n\t\t\t\tend: {\n\t\t\t\t\tWebkitAnimation: 'webkitAnimationEnd',\n\t\t\t\t\tMozAnimation: 'animationend',\n\t\t\t\t\tOAnimation: 'oAnimationEnd',\n\t\t\t\t\tanimation: 'animationend'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttests = {\n\t\t\tcsstransforms: function() {\n\t\t\t\treturn !!test('transform');\n\t\t\t},\n\t\t\tcsstransforms3d: function() {\n\t\t\t\treturn !!test('perspective');\n\t\t\t},\n\t\t\tcsstransitions: function() {\n\t\t\t\treturn !!test('transition');\n\t\t\t},\n\t\t\tcssanimations: function() {\n\t\t\t\treturn !!test('animation');\n\t\t\t}\n\t\t};\n\n\tfunction test(property, prefixed) {\n\t\tvar result = false,\n\t\t\tupper = property.charAt(0).toUpperCase() + property.slice(1);\n\n\t\t$.each((property + ' ' + prefixes.join(upper + ' ') + upper).split(' '), function(i, property) {\n\t\t\tif (style[property] !== undefined) {\n\t\t\t\tresult = prefixed ? property : true;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tfunction prefixed(property) {\n\t\treturn test(property, true);\n\t}\n\n\tif (tests.csstransitions()) {\n\t\t/* jshint -W053 */\n\t\t$.support.transition = new String(prefixed('transition'))\n\t\t$.support.transition.end = events.transition.end[ $.support.transition ];\n\t}\n\n\tif (tests.cssanimations()) {\n\t\t/* jshint -W053 */\n\t\t$.support.animation = new String(prefixed('animation'))\n\t\t$.support.animation.end = events.animation.end[ $.support.animation ];\n\t}\n\n\tif (tests.csstransforms()) {\n\t\t/* jshint -W053 */\n\t\t$.support.transform = new String(prefixed('transform'));\n\t\t$.support.transform3d = tests.csstransforms3d();\n\t}\n\n})(window.Zepto || window.jQuery, window, document);\n","$(window).on('load', function () {\n    //go-top button\n    $(\"#go_top, .go-top\").click(function () {\n        $(\"html, body\").animate({\n            scrollTop: 0\n        }, \"slow\");\n        return false;\n    });\n\n    //goto #id\n    // eg:   <a href=\"#example\" class=\"go-to\">go to</a>\n    $(\"a.go-to[href^='#']\").click(function (e) {\n        e.preventDefault();\n        $('#menu').removeClass('is-active');\n\n        var target = $($(this).attr('href'));\n        if (target.length) {\n            var fixedHeight = $('.fixed').height() || 0;\n            var pos = target.offset().top - fixedHeight;\n            $(\"html, body\").animate({\n                scrollTop: pos\n            }, \"slow\");\n        }\n    });\n})\n","\r\n//add maxlength attr to input[number]\r\n$(function () {\r\n    $(\"input[type='number'][maxlength]\").on('keyup keydown keypress blur change input', function (e) {\r\n        if (e.keyCode === 8 || e.keyCode === 9) {\r\n            return true\r\n        }\r\n        return this.value.length < +this.attributes.maxlength.value;\r\n    });\r\n})\r\n","//==== js-tab ====//\r\n// .js-tab\r\n//     ul.js-tabnav\r\n//         a[href=\"#tab1\"]\r\n//         a[href=\"#tab2\"]\r\n//     .js-tab-content\r\n//         #tab1.tab-panel.fade.in\r\n//         #tab2.tab-panel.fade\r\n$(function () {\r\n\r\n    $('.js-tab').each(function () {\r\n        var _this = $(this);\r\n        var nav = _this.find('.js-tabnav');\r\n        var handleClick = 'ontouchstart' in document.documentElement ? 'touchstart' : 'click';\r\n        $(nav).on(handleClick, \"a[href^='#']\", function (e) {\r\n\r\n            e.preventDefault();\r\n            if ($(this).parent().hasClass('active')) {\r\n                return;\r\n            }\r\n            $(nav).find('.active').removeClass('active');\r\n            $(this).parent().addClass('active');\r\n\r\n\r\n            var target = $($(this).attr('href'));\r\n            target.siblings().removeClass('in');\r\n            setTimeout(function () {\r\n                target.siblings().removeClass('active');\r\n            }, 100);\r\n            target.addClass('active');\r\n            setTimeout(function () {\r\n                target.addClass('in');\r\n            }, 100);\r\n        })\r\n    })\r\n})","$(function() {\n  var html = $('html, body'),\n      navContainer = $('.nav-container'),\n      navToggle = $('.nav-toggle'),\n      navDropdownToggle = $('.has-dropdown');\n\n\n  // Nav toggle\n  navToggle.on('click', function(e) {\n      var $this = $(this);\n      e.preventDefault();\n      $this.toggleClass('is-active');\n      navContainer.toggleClass('is-visible');\n      html.toggleClass('nav-open');\n  });\n\n  // Nav dropdown toggle\n  navDropdownToggle.on('click', function() {\n      var $this = $(this);\n      $this.toggleClass('is-active').children('ul').toggleClass('is-visible');\n  });\n\n  // Prevent click events from firing on children of navDropdownToggle\n  navDropdownToggle.on('click', '*', function(e) {\n      e.stopPropagation();\n  });\n\n\n});\n\n$(function () {\n  // search dropdown button\n  $('.drop-button, .dropdown-content .close').click(function (e) {\n      e.preventDefault();\n      $(this).parents('.search-drop').find('.dropdown-content').toggleClass('visible')\n  })\n  $(document).click(function (event) {\n      // Check if clicked outside target\n      if (!($(event.target).closest(\".search-drop\").length)) {\n          // Hide target\n          $(\".dropdown-content\").removeClass('visible');\n      }\n  });\n})\n\n$(function () {\n  //----dropdown-multi-lv-menu\n  $('.dropdown').click(function (e) {\n      var thiss = $(this);\n      thiss.toggleClass('is-active');\n  });\n  $('.dropdown.nested').on('click', '*', function (e) {\n      e.stopPropagation();\n  });\n\n  //----sticky-header\n  if ($('.sticky-header').length) {\n      var _this = $('.sticky-header');\n      _this.after(\"<div class='after-fixed'></div>\");\n      var stickyPos = _this.offset().top;\n      $('.after-fixed').css('padding-top', $('.fixed').height());\n\n      $(window).scroll(function () {\n          if (window.innerWidth > 992) {\n              if ($(window).scrollTop() >= stickyPos) {\n                  _this.addClass('fixed');\n                  $('.after-fixed').css('padding-top', $('.fixed').height());\n              } else {\n                  _this.removeClass('fixed');\n                  $('.after-fixed').css('padding-top', '0px');\n              }\n          } else {\n              _this.removeClass('fixed');\n              $('.after-fixed').css('padding-top', '0px');\n          }\n      })\n  }\n})\n\n// search-box\n\n\n$(function () {\n  $(document).ready(function (e) {\n      $('.search-panel .dropdown-select').find('a').click(function (e) {\n          e.preventDefault();\n          var param = $(this).attr(\"href\").replace(\"#\", \"\");\n          var concept = $(this).text();\n          $('.search-panel span#search_concept-top').text(concept);\n          $('.input-group #search_param').val(param);\n      });\n  });\n  $(document).ready(function (e) {\n      $('.search-panel .dropdown-menu').find('a').click(function (e) {\n          e.preventDefault();\n          var param = $(this).attr(\"href\").replace(\"#\", \"\");\n          var concept = $(this).text();\n          $('.search-panel span#search_concept').text(concept);\n          $('.input-group #search_param').val(param);\n      });\n  });\n})\n","//mobile nav button\r\n$(document).on('click', '.nav-toggle', function () {\r\n    $('#menu').toggleClass('is-active');\r\n})","//----sticky-header\r\n$(function () {\r\n    if ($('.sticky-header').length) {\r\n        var _this = $('.sticky-header');\r\n        var afterFixed = $('.js-after-fixed');\r\n        // _this.after(afterFixed);\r\n        if (afterFixed) {\r\n            afterFixed.css('padding-top', $('.fixed').height());\r\n        }\r\n\r\n        // var stickyPos = _this.offset().top;\r\n        // $(window).scroll(function () {\r\n        //     if (window.innerWidth > 992) {\r\n        //         if ($(window).scrollTop() >= stickyPos) {\r\n        //             _this.addClass('fixed');\r\n        //             $('.after-fixed').css('padding-top', $('.fixed').height());\r\n        //         } else {\r\n        //             _this.removeClass('fixed');\r\n        //             $('.after-fixed').css('padding-top', '0px');\r\n        //         }\r\n        //     } else {\r\n        //         _this.removeClass('fixed');\r\n        //         $('.after-fixed').css('padding-top', '0px');\r\n        //     }\r\n        // })\r\n    }\r\n})","$(window).on('load', function () {\n  console.log('hide')\n  $('.spin').hide();\n  $('.page-loader').css({\n    'opacity': '0',\n    'visibility': 'hidden'\n  });\n})\n","$(window).on('load', function () {\n  function Render_img() {\n    'use strict';\n    if ($('.imgRow').length) {\n      console.log('row')\n      $(\".reRenderImg img\").css('height', 'auto');\n      $(\".imgRow\").each(function () {\n        var thisRow,\n          imgs,\n          w,\n          h,\n          ratio;\n\n        thisRow = $(this);\n        imgs = thisRow.find(\".reRenderImg img\");\n\n        w = imgs.width();\n        h = imgs.height();\n        ratio = h / w;\n\n        imgs.height(Math.ceil(ratio * parseInt(w)));\n      });\n    }\n  }\n\n  var t;\n\n  function debounce_render() {\n    clearTimeout(t);\n    t = setTimeout(Render_img, 100);\n  }\n\n  $(function () {\n    debounce_render();\n\n    var url = window.location.href;\n    // $('.menu-item  a').parent().removeClass('active');\n    $('.menu-item  a[href=\"' + url + '\"]').parent().addClass('active');\n  });\n\n  $(window).resize(function () {\n    debounce_render();\n  });\n\n})\n","//maps\r\nwindow.myMap = function myMap() {\r\n\r\n    var mapElem = document.getElementById(\"googleMap\");\r\n    if (mapElem) {\r\n        var myLatLng = {\r\n            lat: 35.527735,\r\n            lng: 139.699773\r\n        };\r\n\r\n        var mapProp = {\r\n            center: new google.maps.LatLng(myLatLng),\r\n            zoom: 16,\r\n            styles: [{\r\n                    elementType: 'labels.text.fill',\r\n                    stylers: [{\r\n                        color: '#7c9eb0'\r\n                    }]\r\n                },\r\n                {\r\n                    elementType: 'geometry.fill',\r\n                    stylers: [{\r\n                        color: '#ecf1f3'\r\n                    }]\r\n                },\r\n                {\r\n                    elementType: 'geometry.stroke',\r\n                    stylers: [{\r\n                        color: '#98bbce'\r\n                    }]\r\n                },\r\n\r\n                // {\r\n                //   featureType: '-----------------',\r\n                //   elementType: 'geometry.fill',\r\n                //   stylers: [{color: '#00ff00'}]\r\n                // },\r\n                {\r\n                    featureType: 'poi.park',\r\n                    elementType: 'geometry.fill',\r\n                    stylers: [{\r\n                        color: '#c1d1d9'\r\n                    }]\r\n                },\r\n                {\r\n                    featureType: 'road',\r\n                    elementType: 'geometry.fill',\r\n                    stylers: [{\r\n                        color: '#ffffff'\r\n                    }]\r\n                },\r\n\r\n                {\r\n                    featureType: 'road.highway',\r\n                    elementType: 'geometry.stroke',\r\n                    stylers: [{\r\n                        color: '#80a0b2'\r\n                    }]\r\n                },\r\n                {\r\n                    featureType: 'road.highway',\r\n                    elementType: 'geometry.fill',\r\n                    stylers: [{\r\n                        color: '#d5dfe5'\r\n                    }]\r\n                },\r\n                {\r\n                    featureType: 'water',\r\n                    elementType: 'geometry',\r\n                    stylers: [{\r\n                        color: '#638ba1'\r\n                    }]\r\n                },\r\n            ]\r\n\r\n        };\r\n        var map = new google.maps.Map(mapElem, mapProp);\r\n        var marker = new google.maps.Marker({\r\n            position: myLatLng,\r\n            map: map,\r\n            title: 'Hello World!'\r\n        });\r\n        marker.setMap(map);\r\n    }\r\n}","window.onload = function () {\n  /*Set the date we're counting down to*/\n  $('.deal-countdown').each(function () {\n    console.time('count-down');\n    var _this = $(this);\n    var thisDealTime = $(this).attr('data-deal-time'); /*lay moc thoi gian*/\n    var countDownFrom = new Date(thisDealTime).getTime();\n    /*Update the count down every 1 second*/\n    var x = setInterval(function () {\n      /*Get todays date and time*/\n      var now = new Date().getTime();\n      /*Find the distance between now an the count down date*/\n      var distance = countDownFrom - now;\n      /*Time calculations for days, hours, minutes and seconds*/\n      var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 *\n        60 * 60));\n      var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n      /*Output the result */\n      _this.find('.day').find('.num').find('span').text(days);\n      _this.find('.hour').find('.num').find('span').text(hours);\n      _this.find('.min').find('.num').find('span').text(minutes);\n      _this.find('.sec').find('.num').find('span').text(seconds);\n      if (distance < 0) {\n        clearInterval(x);\n      }\n    }, 1000);\n    console.timeEnd('count-down');\n  })\n}\n","$(function () {\n  $('.home-tab-mb').click(() => {\n    $('.home-tabs').toggleClass('open');\n  })\n})\n","import owlCarousel from \"owl.carousel2\";\n$(() => {\n  $('.owl-dot').hover(function () {\n    $('.slider_main').trigger('to.owl.carousel', [$(this).index(), 500]);\n  }, );\n  $(\".slider_main\").owlCarousel({\n    items: 1,\n    responsive: {\n      1200: {\n        item: 1\n      }, // breakpoint from 1200 up\n      982: {\n        items: 1\n      },\n      768: {\n        items: 1\n      },\n      480: {\n        items: 1\n      },\n      0: {\n        items: 1,\n        nav: false\n      }\n    },\n    slideBy: 1,\n    loop: true,\n    rewind: false,\n    autoplay: true,\n    autoplayTimeout: 4000,\n    autoplayHoverPause: true,\n    smartSpeed: 500, //slide speed smooth\n    dots: true,\n    dotsEach: true,\n    dotsContainer: '#main-custom-dots',\n    nav: true,\n    navText: ['‹', '›'],\n    // navText: ['<img src=\"img/but-p.png\"/>', '<img src=\"img/but-n.png\"/>'],\n    // navText: ['<i class=\"fa fa-chevron-left\"><i/>', '<i class=\"fa fa-chevron-right\"><i/>'],\n    // navSpeed: 250, //slide speed when click button\n    autoWidth: false,\n    margin: 0,\n    lazyContent: false,\n    lazyLoad: false,\n    // animateIn: ['flipInX', 'flipInY', 'zoomIn', 'slideInDown', 'bounceIn', 'faderIn'],\n    // animateOut: ['flipOutX', 'flipOutY', 'zoomOut', 'slideOutDown', 'bounceOut', 'faderOut'],\n    animateIn: '',\n    animateOut: '',\n    center: false,\n    URLhashListener: false,\n    video: false,\n    videoHeight: false,\n    videoWidth: false,\n  });\n\n  $('.slider_prod_hot').owlCarousel({\n    items: 4,\n    responsive: {\n      1200: {\n        item: 4\n      },\n      982: {\n        items: 3\n      },\n      768: {\n        items: 3\n      },\n      480: {\n        items: 2\n      },\n      0: {\n        items: 1,\n        nav: false\n      }\n    },\n    slideBy: 1,\n    loop: true,\n    rewind: true,\n    autoplay: true,\n    autoplayTimeout: 4000,\n    autoplayHoverPause: true,\n    smartSpeed: 500,\n    dots: false,\n    dotsEach: false,\n    nav: true,\n    navText: ['‹', '›'],\n    // navText: ['<img src=\"img/but-p.png\"/>', '<img src=\"img/but-n.png\"/>'],\n    /*navText: ['<i class=\"fa fa-chevron-left\"><i/>', '<i class=\"fa fa-chevron-right\"><i/>'],*/\n    /*navSpeed: 250, */\n    autoWidth: false,\n    margin: 0,\n    stagePadding: 0,\n    lazyContent: false,\n    lazyLoad: false,\n    animateIn: false,\n    animateOut: false,\n    center: false,\n    URLhashListener: false,\n    video: false,\n    videoHeight: false,\n    videoWidth: false,\n  });\n\n  $('.slider_deal').owlCarousel({\n    items: 5,\n    responsive: {\n      1200: {\n        item: 5\n      },\n      982: {\n        items: 4\n      },\n      768: {\n        items: 3\n      },\n      480: {\n        items: 2\n      },\n      0: {\n        items: 1,\n        nav: false\n      }\n    },\n    slideBy: 1,\n    loop: false,\n    rewind: true,\n    center: false,\n    autoplay: true,\n    autoplayTimeout: 4000,\n    autoplayHoverPause: true,\n    smartSpeed: 500,\n    dots: false,\n    dotsEach: false,\n    nav: true,\n    navText: ['‹', '›'],\n    // navText: ['<img src=\"img/but-p.png\"/>', '<img src=\"img/but-n.png\"/>'],\n    /*navText: ['<i class=\"fa fa-chevron-left\"><i/>', '<i class=\"fa fa-chevron-right\"><i/>'],*/\n    /*navSpeed: 250, */\n    autoWidth: false,\n    margin: 0,\n    stagePadding: 1,\n    lazyContent: false,\n    lazyLoad: false,\n    animateIn: false,\n    animateOut: false,\n    URLhashListener: false,\n    video: false,\n    videoHeight: false,\n    videoWidth: false,\n  });\n  $('.slider_news').owlCarousel({\n    items: 4,\n    responsive: {\n      1200: {\n        item: 4\n      },\n      982: {\n        items: 3\n      },\n      768: {\n        items: 3\n      },\n      480: {\n        items: 2\n      },\n      0: {\n        items: 1,\n        nav: false\n      }\n    },\n    slideBy: 1,\n    loop: true,\n    rewind: true,\n    autoplay: true,\n    autoplayTimeout: 4000,\n    autoplayHoverPause: true,\n    smartSpeed: 500,\n    dots: false,\n    dotsEach: false,\n    nav: true,\n    navText: ['‹', '›'],\n    // navText: ['<img src=\"img/but-p.png\"/>', '<img src=\"img/but-n.png\"/>'],\n    /*navText: ['<i class=\"fa fa-chevron-left\"><i/>', '<i class=\"fa fa-chevron-right\"><i/>'],*/\n    /*navSpeed: 250, */\n    autoWidth: false,\n    margin: 10,\n    stagePadding: 1,\n    center: false,\n    lazyContent: false,\n    lazyLoad: false,\n    animateIn: false,\n    animateOut: false,\n    URLhashListener: false,\n    video: false,\n    videoHeight: false,\n    videoWidth: false,\n  });\n})\n","// export function requireAll(folder, ext=\"js\") {\r\n//     r = require.context(`../${folder}`, true, new RegExp('\\.' + ext))\r\n//     r.keys().forEach(r);\r\n// }","/*!\r\n * jQuery Validation Plugin v1.17.0\r\n *\r\n * https://jqueryvalidation.org/\r\n *\r\n * Copyright (c) 2017 Jörn Zaefferer\r\n * Released under the MIT license\r\n */\r\n(function (factory) {\r\n\tif (typeof define === \"function\" && define.amd) {\r\n\t\tdefine([\"jquery\"], factory);\r\n\t} else if (typeof module === \"object\" && module.exports) {\r\n\t\tmodule.exports = factory(require(\"jquery\"));\r\n\t} else {\r\n\t\tfactory(jQuery);\r\n\t}\r\n}(function ($) {\r\n\r\n\t$.extend($.fn, {\r\n\r\n\t\t// https://jqueryvalidation.org/validate/\r\n\t\tvalidate: function (options) {\r\n\r\n\t\t\t// If nothing is selected, return nothing; can't chain anyway\r\n\t\t\tif (!this.length) {\r\n\t\t\t\tif (options && options.debug && window.console) {\r\n\t\t\t\t\tconsole.warn(\"Nothing selected, can't validate, returning nothing.\");\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Check if a validator for this form was already created\r\n\t\t\tvar validator = $.data(this[0], \"validator\");\r\n\t\t\tif (validator) {\r\n\t\t\t\treturn validator;\r\n\t\t\t}\r\n\r\n\t\t\t// Add novalidate tag if HTML5.\r\n\t\t\tthis.attr(\"novalidate\", \"novalidate\");\r\n\r\n\t\t\tvalidator = new $.validator(options, this[0]);\r\n\t\t\t$.data(this[0], \"validator\", validator);\r\n\r\n\t\t\tif (validator.settings.onsubmit) {\r\n\r\n\t\t\t\tthis.on(\"click.validate\", \":submit\", function (event) {\r\n\r\n\t\t\t\t\t// Track the used submit button to properly handle scripted\r\n\t\t\t\t\t// submits later.\r\n\t\t\t\t\tvalidator.submitButton = event.currentTarget;\r\n\r\n\t\t\t\t\t// Allow suppressing validation by adding a cancel class to the submit button\r\n\t\t\t\t\tif ($(this).hasClass(\"cancel\")) {\r\n\t\t\t\t\t\tvalidator.cancelSubmit = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Allow suppressing validation by adding the html5 formnovalidate attribute to the submit button\r\n\t\t\t\t\tif ($(this).attr(\"formnovalidate\") !== undefined) {\r\n\t\t\t\t\t\tvalidator.cancelSubmit = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Validate the form on submit\r\n\t\t\t\tthis.on(\"submit.validate\", function (event) {\r\n\t\t\t\t\tif (validator.settings.debug) {\r\n\r\n\t\t\t\t\t\t// Prevent form submit to be able to see console output\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfunction handle() {\r\n\t\t\t\t\t\tvar hidden, result;\r\n\r\n\t\t\t\t\t\t// Insert a hidden input as a replacement for the missing submit button\r\n\t\t\t\t\t\t// The hidden input is inserted in two cases:\r\n\t\t\t\t\t\t//   - A user defined a `submitHandler`\r\n\t\t\t\t\t\t//   - There was a pending request due to `remote` method and `stopRequest()`\r\n\t\t\t\t\t\t//     was called to submit the form in case it's valid\r\n\t\t\t\t\t\tif (validator.submitButton && (validator.settings.submitHandler || validator.formSubmitted)) {\r\n\t\t\t\t\t\t\thidden = $(\"<input type='hidden'/>\")\r\n\t\t\t\t\t\t\t\t.attr(\"name\", validator.submitButton.name)\r\n\t\t\t\t\t\t\t\t.val($(validator.submitButton).val())\r\n\t\t\t\t\t\t\t\t.appendTo(validator.currentForm);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (validator.settings.submitHandler) {\r\n\t\t\t\t\t\t\tresult = validator.settings.submitHandler.call(validator, validator.currentForm, event);\r\n\t\t\t\t\t\t\tif (hidden) {\r\n\r\n\t\t\t\t\t\t\t\t// And clean up afterwards; thanks to no-block-scope, hidden can be referenced\r\n\t\t\t\t\t\t\t\thidden.remove();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (result !== undefined) {\r\n\t\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prevent submit for invalid forms or custom submit handlers\r\n\t\t\t\t\tif (validator.cancelSubmit) {\r\n\t\t\t\t\t\tvalidator.cancelSubmit = false;\r\n\t\t\t\t\t\treturn handle();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (validator.form()) {\r\n\t\t\t\t\t\tif (validator.pendingRequest) {\r\n\t\t\t\t\t\t\tvalidator.formSubmitted = true;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn handle();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvalidator.focusInvalid();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn validator;\r\n\t\t},\r\n\r\n\t\t// https://jqueryvalidation.org/valid/\r\n\t\tvalid: function () {\r\n\t\t\tvar valid, validator, errorList;\r\n\r\n\t\t\tif ($(this[0]).is(\"form\")) {\r\n\t\t\t\tvalid = this.validate().form();\r\n\t\t\t} else {\r\n\t\t\t\terrorList = [];\r\n\t\t\t\tvalid = true;\r\n\t\t\t\tvalidator = $(this[0].form).validate();\r\n\t\t\t\tthis.each(function () {\r\n\t\t\t\t\tvalid = validator.element(this) && valid;\r\n\t\t\t\t\tif (!valid) {\r\n\t\t\t\t\t\terrorList = errorList.concat(validator.errorList);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tvalidator.errorList = errorList;\r\n\t\t\t}\r\n\t\t\treturn valid;\r\n\t\t},\r\n\r\n\t\t// https://jqueryvalidation.org/rules/\r\n\t\trules: function (command, argument) {\r\n\t\t\tvar element = this[0],\r\n\t\t\t\tsettings, staticRules, existingRules, data, param, filtered;\r\n\r\n\t\t\t// If nothing is selected, return empty object; can't chain anyway\r\n\t\t\tif (element == null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!element.form && element.hasAttribute(\"contenteditable\")) {\r\n\t\t\t\telement.form = this.closest(\"form\")[0];\r\n\t\t\t\telement.name = this.attr(\"name\");\r\n\t\t\t}\r\n\r\n\t\t\tif (element.form == null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (command) {\r\n\t\t\t\tsettings = $.data(element.form, \"validator\").settings;\r\n\t\t\t\tstaticRules = settings.rules;\r\n\t\t\t\texistingRules = $.validator.staticRules(element);\r\n\t\t\t\tswitch (command) {\r\n\t\t\t\t\tcase \"add\":\r\n\t\t\t\t\t\t$.extend(existingRules, $.validator.normalizeRule(argument));\r\n\r\n\t\t\t\t\t\t// Remove messages from rules, but allow them to be set separately\r\n\t\t\t\t\t\tdelete existingRules.messages;\r\n\t\t\t\t\t\tstaticRules[element.name] = existingRules;\r\n\t\t\t\t\t\tif (argument.messages) {\r\n\t\t\t\t\t\t\tsettings.messages[element.name] = $.extend(settings.messages[element.name], argument.messages);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"remove\":\r\n\t\t\t\t\t\tif (!argument) {\r\n\t\t\t\t\t\t\tdelete staticRules[element.name];\r\n\t\t\t\t\t\t\treturn existingRules;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfiltered = {};\r\n\t\t\t\t\t\t$.each(argument.split(/\\s/), function (index, method) {\r\n\t\t\t\t\t\t\tfiltered[method] = existingRules[method];\r\n\t\t\t\t\t\t\tdelete existingRules[method];\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn filtered;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdata = $.validator.normalizeRules(\r\n\t\t\t\t$.extend({},\r\n\t\t\t\t\t$.validator.classRules(element),\r\n\t\t\t\t\t$.validator.attributeRules(element),\r\n\t\t\t\t\t$.validator.dataRules(element),\r\n\t\t\t\t\t$.validator.staticRules(element)\r\n\t\t\t\t), element);\r\n\r\n\t\t\t// Make sure required is at front\r\n\t\t\tif (data.required) {\r\n\t\t\t\tparam = data.required;\r\n\t\t\t\tdelete data.required;\r\n\t\t\t\tdata = $.extend({\r\n\t\t\t\t\trequired: param\r\n\t\t\t\t}, data);\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure remote is at back\r\n\t\t\tif (data.remote) {\r\n\t\t\t\tparam = data.remote;\r\n\t\t\t\tdelete data.remote;\r\n\t\t\t\tdata = $.extend(data, {\r\n\t\t\t\t\tremote: param\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\t});\r\n\r\n\t// Custom selectors\r\n\t$.extend($.expr.pseudos || $.expr[\":\"], { // '|| $.expr[ \":\" ]' here enables backwards compatibility to jQuery 1.7. Can be removed when dropping jQ 1.7.x support\r\n\r\n\t\t// https://jqueryvalidation.org/blank-selector/\r\n\t\tblank: function (a) {\r\n\t\t\treturn !$.trim(\"\" + $(a).val());\r\n\t\t},\r\n\r\n\t\t// https://jqueryvalidation.org/filled-selector/\r\n\t\tfilled: function (a) {\r\n\t\t\tvar val = $(a).val();\r\n\t\t\treturn val !== null && !!$.trim(\"\" + val);\r\n\t\t},\r\n\r\n\t\t// https://jqueryvalidation.org/unchecked-selector/\r\n\t\tunchecked: function (a) {\r\n\t\t\treturn !$(a).prop(\"checked\");\r\n\t\t}\r\n\t});\r\n\r\n\t// Constructor for validator\r\n\t$.validator = function (options, form) {\r\n\t\tthis.settings = $.extend(true, {}, $.validator.defaults, options);\r\n\t\tthis.currentForm = form;\r\n\t\tthis.init();\r\n\t};\r\n\r\n\t// https://jqueryvalidation.org/jQuery.validator.format/\r\n\t$.validator.format = function (source, params) {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\treturn function () {\r\n\t\t\t\tvar args = $.makeArray(arguments);\r\n\t\t\t\targs.unshift(source);\r\n\t\t\t\treturn $.validator.format.apply(this, args);\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (params === undefined) {\r\n\t\t\treturn source;\r\n\t\t}\r\n\t\tif (arguments.length > 2 && params.constructor !== Array) {\r\n\t\t\tparams = $.makeArray(arguments).slice(1);\r\n\t\t}\r\n\t\tif (params.constructor !== Array) {\r\n\t\t\tparams = [params];\r\n\t\t}\r\n\t\t$.each(params, function (i, n) {\r\n\t\t\tsource = source.replace(new RegExp(\"\\\\{\" + i + \"\\\\}\", \"g\"), function () {\r\n\t\t\t\treturn n;\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn source;\r\n\t};\r\n\r\n\t$.extend($.validator, {\r\n\r\n\t\tdefaults: {\r\n\t\t\tmessages: {},\r\n\t\t\tgroups: {},\r\n\t\t\trules: {},\r\n\t\t\terrorClass: \"error\",\r\n\t\t\tpendingClass: \"pending\",\r\n\t\t\tvalidClass: \"valid\",\r\n\t\t\terrorElement: \"label\",\r\n\t\t\tfocusCleanup: false,\r\n\t\t\tfocusInvalid: true,\r\n\t\t\terrorContainer: $([]),\r\n\t\t\terrorLabelContainer: $([]),\r\n\t\t\tonsubmit: true,\r\n\t\t\tignore: \":hidden\",\r\n\t\t\tignoreTitle: false,\r\n\t\t\tonfocusin: function (element) {\r\n\t\t\t\tthis.lastActive = element;\r\n\r\n\t\t\t\t// Hide error label and remove error class on focus if enabled\r\n\t\t\t\tif (this.settings.focusCleanup) {\r\n\t\t\t\t\tif (this.settings.unhighlight) {\r\n\t\t\t\t\t\tthis.settings.unhighlight.call(this, element, this.settings.errorClass, this.settings.validClass);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.hideThese(this.errorsFor(element));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonfocusout: function (element) {\r\n\t\t\t\tif (!this.checkable(element) && (element.name in this.submitted || !this.optional(element))) {\r\n\t\t\t\t\tthis.element(element);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonkeyup: function (element, event) {\r\n\r\n\t\t\t\t// Avoid revalidate the field when pressing one of the following keys\r\n\t\t\t\t// Shift       => 16\r\n\t\t\t\t// Ctrl        => 17\r\n\t\t\t\t// Alt         => 18\r\n\t\t\t\t// Caps lock   => 20\r\n\t\t\t\t// End         => 35\r\n\t\t\t\t// Home        => 36\r\n\t\t\t\t// Left arrow  => 37\r\n\t\t\t\t// Up arrow    => 38\r\n\t\t\t\t// Right arrow => 39\r\n\t\t\t\t// Down arrow  => 40\r\n\t\t\t\t// Insert      => 45\r\n\t\t\t\t// Num lock    => 144\r\n\t\t\t\t// AltGr key   => 225\r\n\t\t\t\tvar excludedKeys = [\r\n\t\t\t\t\t16, 17, 18, 20, 35, 36, 37,\r\n\t\t\t\t\t38, 39, 40, 45, 144, 225\r\n\t\t\t\t];\r\n\r\n\t\t\t\tif (event.which === 9 && this.elementValue(element) === \"\" || $.inArray(event.keyCode, excludedKeys) !== -1) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if (element.name in this.submitted || element.name in this.invalid) {\r\n\t\t\t\t\tthis.element(element);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonclick: function (element) {\r\n\r\n\t\t\t\t// Click on selects, radiobuttons and checkboxes\r\n\t\t\t\tif (element.name in this.submitted) {\r\n\t\t\t\t\tthis.element(element);\r\n\r\n\t\t\t\t\t// Or option elements, check parent select in that case\r\n\t\t\t\t} else if (element.parentNode.name in this.submitted) {\r\n\t\t\t\t\tthis.element(element.parentNode);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thighlight: function (element, errorClass, validClass) {\r\n\t\t\t\tif (element.type === \"radio\") {\r\n\t\t\t\t\tthis.findByName(element.name).addClass(errorClass).removeClass(validClass);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$(element).addClass(errorClass).removeClass(validClass);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tunhighlight: function (element, errorClass, validClass) {\r\n\t\t\t\tif (element.type === \"radio\") {\r\n\t\t\t\t\tthis.findByName(element.name).removeClass(errorClass).addClass(validClass);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$(element).removeClass(errorClass).addClass(validClass);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// https://jqueryvalidation.org/jQuery.validator.setDefaults/\r\n\t\tsetDefaults: function (settings) {\r\n\t\t\t$.extend($.validator.defaults, settings);\r\n\t\t},\r\n\r\n\t\tmessages: {\r\n\t\t\trequired: \"This field is required.\",\r\n\t\t\tremote: \"Please fix this field.\",\r\n\t\t\temail: \"Please enter a valid email address.\",\r\n\t\t\turl: \"Please enter a valid URL.\",\r\n\t\t\tdate: \"Please enter a valid date.\",\r\n\t\t\tdateISO: \"Please enter a valid date (ISO).\",\r\n\t\t\tnumber: \"Please enter a valid number.\",\r\n\t\t\tdigits: \"Please enter only digits.\",\r\n\t\t\tequalTo: \"Please enter the same value again.\",\r\n\t\t\tmaxlength: $.validator.format(\"Please enter no more than {0} characters.\"),\r\n\t\t\tminlength: $.validator.format(\"Please enter at least {0} characters.\"),\r\n\t\t\trangelength: $.validator.format(\"Please enter a value between {0} and {1} characters long.\"),\r\n\t\t\trange: $.validator.format(\"Please enter a value between {0} and {1}.\"),\r\n\t\t\tmax: $.validator.format(\"Please enter a value less than or equal to {0}.\"),\r\n\t\t\tmin: $.validator.format(\"Please enter a value greater than or equal to {0}.\"),\r\n\t\t\tstep: $.validator.format(\"Please enter a multiple of {0}.\")\r\n\t\t},\r\n\r\n\t\tautoCreateRanges: false,\r\n\r\n\t\tprototype: {\r\n\r\n\t\t\tinit: function () {\r\n\t\t\t\tthis.labelContainer = $(this.settings.errorLabelContainer);\r\n\t\t\t\tthis.errorContext = this.labelContainer.length && this.labelContainer || $(this.currentForm);\r\n\t\t\t\tthis.containers = $(this.settings.errorContainer).add(this.settings.errorLabelContainer);\r\n\t\t\t\tthis.submitted = {};\r\n\t\t\t\tthis.valueCache = {};\r\n\t\t\t\tthis.pendingRequest = 0;\r\n\t\t\t\tthis.pending = {};\r\n\t\t\t\tthis.invalid = {};\r\n\t\t\t\tthis.reset();\r\n\r\n\t\t\t\tvar groups = (this.groups = {}),\r\n\t\t\t\t\trules;\r\n\t\t\t\t$.each(this.settings.groups, function (key, value) {\r\n\t\t\t\t\tif (typeof value === \"string\") {\r\n\t\t\t\t\t\tvalue = value.split(/\\s/);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.each(value, function (index, name) {\r\n\t\t\t\t\t\tgroups[name] = key;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\trules = this.settings.rules;\r\n\t\t\t\t$.each(rules, function (key, value) {\r\n\t\t\t\t\trules[key] = $.validator.normalizeRule(value);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tfunction delegate(event) {\r\n\r\n\t\t\t\t\t// Set form expando on contenteditable\r\n\t\t\t\t\tif (!this.form && this.hasAttribute(\"contenteditable\")) {\r\n\t\t\t\t\t\tthis.form = $(this).closest(\"form\")[0];\r\n\t\t\t\t\t\tthis.name = $(this).attr(\"name\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar validator = $.data(this.form, \"validator\"),\r\n\t\t\t\t\t\teventType = \"on\" + event.type.replace(/^validate/, \"\"),\r\n\t\t\t\t\t\tsettings = validator.settings;\r\n\t\t\t\t\tif (settings[eventType] && !$(this).is(settings.ignore)) {\r\n\t\t\t\t\t\tsettings[eventType].call(validator, this, event);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$(this.currentForm)\r\n\t\t\t\t\t.on(\"focusin.validate focusout.validate keyup.validate\",\r\n\t\t\t\t\t\t\":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], \" +\r\n\t\t\t\t\t\t\"[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], \" +\r\n\t\t\t\t\t\t\"[type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], \" +\r\n\t\t\t\t\t\t\"[type='radio'], [type='checkbox'], [contenteditable], [type='button']\", delegate)\r\n\r\n\t\t\t\t\t// Support: Chrome, oldIE\r\n\t\t\t\t\t// \"select\" is provided as event.target when clicking a option\r\n\t\t\t\t\t.on(\"click.validate\", \"select, option, [type='radio'], [type='checkbox']\", delegate);\r\n\r\n\t\t\t\tif (this.settings.invalidHandler) {\r\n\t\t\t\t\t$(this.currentForm).on(\"invalid-form.validate\", this.settings.invalidHandler);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/Validator.form/\r\n\t\t\tform: function () {\r\n\t\t\t\tthis.checkForm();\r\n\t\t\t\t$.extend(this.submitted, this.errorMap);\r\n\t\t\t\tthis.invalid = $.extend({}, this.errorMap);\r\n\t\t\t\tif (!this.valid()) {\r\n\t\t\t\t\t$(this.currentForm).triggerHandler(\"invalid-form\", [this]);\r\n\t\t\t\t}\r\n\t\t\t\tthis.showErrors();\r\n\t\t\t\treturn this.valid();\r\n\t\t\t},\r\n\r\n\t\t\tcheckForm: function () {\r\n\t\t\t\tthis.prepareForm();\r\n\t\t\t\tfor (var i = 0, elements = (this.currentElements = this.elements()); elements[i]; i++) {\r\n\t\t\t\t\tthis.check(elements[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn this.valid();\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/Validator.element/\r\n\t\t\telement: function (element) {\r\n\t\t\t\tvar cleanElement = this.clean(element),\r\n\t\t\t\t\tcheckElement = this.validationTargetFor(cleanElement),\r\n\t\t\t\t\tv = this,\r\n\t\t\t\t\tresult = true,\r\n\t\t\t\t\trs, group;\r\n\r\n\t\t\t\tif (checkElement === undefined) {\r\n\t\t\t\t\tdelete this.invalid[cleanElement.name];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.prepareElement(checkElement);\r\n\t\t\t\t\tthis.currentElements = $(checkElement);\r\n\r\n\t\t\t\t\t// If this element is grouped, then validate all group elements already\r\n\t\t\t\t\t// containing a value\r\n\t\t\t\t\tgroup = this.groups[checkElement.name];\r\n\t\t\t\t\tif (group) {\r\n\t\t\t\t\t\t$.each(this.groups, function (name, testgroup) {\r\n\t\t\t\t\t\t\tif (testgroup === group && name !== checkElement.name) {\r\n\t\t\t\t\t\t\t\tcleanElement = v.validationTargetFor(v.clean(v.findByName(name)));\r\n\t\t\t\t\t\t\t\tif (cleanElement && cleanElement.name in v.invalid) {\r\n\t\t\t\t\t\t\t\t\tv.currentElements.push(cleanElement);\r\n\t\t\t\t\t\t\t\t\tresult = v.check(cleanElement) && result;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trs = this.check(checkElement) !== false;\r\n\t\t\t\t\tresult = result && rs;\r\n\t\t\t\t\tif (rs) {\r\n\t\t\t\t\t\tthis.invalid[checkElement.name] = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.invalid[checkElement.name] = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!this.numberOfInvalids()) {\r\n\r\n\t\t\t\t\t\t// Hide error containers on last error\r\n\t\t\t\t\t\tthis.toHide = this.toHide.add(this.containers);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.showErrors();\r\n\r\n\t\t\t\t\t// Add aria-invalid status for screen readers\r\n\t\t\t\t\t$(element).attr(\"aria-invalid\", !rs);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/Validator.showErrors/\r\n\t\t\tshowErrors: function (errors) {\r\n\t\t\t\tif (errors) {\r\n\t\t\t\t\tvar validator = this;\r\n\r\n\t\t\t\t\t// Add items to error list and map\r\n\t\t\t\t\t$.extend(this.errorMap, errors);\r\n\t\t\t\t\tthis.errorList = $.map(this.errorMap, function (message, name) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tmessage: message,\r\n\t\t\t\t\t\t\telement: validator.findByName(name)[0]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// Remove items from success list\r\n\t\t\t\t\tthis.successList = $.grep(this.successList, function (element) {\r\n\t\t\t\t\t\treturn !(element.name in errors);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (this.settings.showErrors) {\r\n\t\t\t\t\tthis.settings.showErrors.call(this, this.errorMap, this.errorList);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.defaultShowErrors();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/Validator.resetForm/\r\n\t\t\tresetForm: function () {\r\n\t\t\t\tif ($.fn.resetForm) {\r\n\t\t\t\t\t$(this.currentForm).resetForm();\r\n\t\t\t\t}\r\n\t\t\t\tthis.invalid = {};\r\n\t\t\t\tthis.submitted = {};\r\n\t\t\t\tthis.prepareForm();\r\n\t\t\t\tthis.hideErrors();\r\n\t\t\t\tvar elements = this.elements()\r\n\t\t\t\t\t.removeData(\"previousValue\")\r\n\t\t\t\t\t.removeAttr(\"aria-invalid\");\r\n\r\n\t\t\t\tthis.resetElements(elements);\r\n\t\t\t},\r\n\r\n\t\t\tresetElements: function (elements) {\r\n\t\t\t\tvar i;\r\n\r\n\t\t\t\tif (this.settings.unhighlight) {\r\n\t\t\t\t\tfor (i = 0; elements[i]; i++) {\r\n\t\t\t\t\t\tthis.settings.unhighlight.call(this, elements[i],\r\n\t\t\t\t\t\t\tthis.settings.errorClass, \"\");\r\n\t\t\t\t\t\tthis.findByName(elements[i].name).removeClass(this.settings.validClass);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\telements\r\n\t\t\t\t\t\t.removeClass(this.settings.errorClass)\r\n\t\t\t\t\t\t.removeClass(this.settings.validClass);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tnumberOfInvalids: function () {\r\n\t\t\t\treturn this.objectLength(this.invalid);\r\n\t\t\t},\r\n\r\n\t\t\tobjectLength: function (obj) {\r\n\t\t\t\t/* jshint unused: false */\r\n\t\t\t\tvar count = 0,\r\n\t\t\t\t\ti;\r\n\t\t\t\tfor (i in obj) {\r\n\r\n\t\t\t\t\t// This check allows counting elements with empty error\r\n\t\t\t\t\t// message as invalid elements\r\n\t\t\t\t\tif (obj[i] !== undefined && obj[i] !== null && obj[i] !== false) {\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn count;\r\n\t\t\t},\r\n\r\n\t\t\thideErrors: function () {\r\n\t\t\t\tthis.hideThese(this.toHide);\r\n\t\t\t},\r\n\r\n\t\t\thideThese: function (errors) {\r\n\t\t\t\terrors.not(this.containers).text(\"\");\r\n\t\t\t\tthis.addWrapper(errors).hide();\r\n\t\t\t},\r\n\r\n\t\t\tvalid: function () {\r\n\t\t\t\treturn this.size() === 0;\r\n\t\t\t},\r\n\r\n\t\t\tsize: function () {\r\n\t\t\t\treturn this.errorList.length;\r\n\t\t\t},\r\n\r\n\t\t\tfocusInvalid: function () {\r\n\t\t\t\tif (this.settings.focusInvalid) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t$(this.findLastActive() || this.errorList.length && this.errorList[0].element || [])\r\n\t\t\t\t\t\t\t.filter(\":visible\")\r\n\t\t\t\t\t\t\t.focus()\r\n\r\n\t\t\t\t\t\t\t// Manually trigger focusin event; without it, focusin handler isn't called, findLastActive won't have anything to find\r\n\t\t\t\t\t\t\t.trigger(\"focusin\");\r\n\t\t\t\t\t} catch (e) {\r\n\r\n\t\t\t\t\t\t// Ignore IE throwing errors when focusing hidden elements\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tfindLastActive: function () {\r\n\t\t\t\tvar lastActive = this.lastActive;\r\n\t\t\t\treturn lastActive && $.grep(this.errorList, function (n) {\r\n\t\t\t\t\treturn n.element.name === lastActive.name;\r\n\t\t\t\t}).length === 1 && lastActive;\r\n\t\t\t},\r\n\r\n\t\t\telements: function () {\r\n\t\t\t\tvar validator = this,\r\n\t\t\t\t\trulesCache = {};\r\n\r\n\t\t\t\t// Select all valid inputs inside the form (no submit or reset buttons)\r\n\t\t\t\treturn $(this.currentForm)\r\n\t\t\t\t\t.find(\"input, select, textarea, [contenteditable]\")\r\n\t\t\t\t\t.not(\":submit, :reset, :image, :disabled\")\r\n\t\t\t\t\t.not(this.settings.ignore)\r\n\t\t\t\t\t.filter(function () {\r\n\t\t\t\t\t\tvar name = this.name || $(this).attr(\"name\"); // For contenteditable\r\n\t\t\t\t\t\tif (!name && validator.settings.debug && window.console) {\r\n\t\t\t\t\t\t\tconsole.error(\"%o has no name assigned\", this);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Set form expando on contenteditable\r\n\t\t\t\t\t\tif (this.hasAttribute(\"contenteditable\")) {\r\n\t\t\t\t\t\t\tthis.form = $(this).closest(\"form\")[0];\r\n\t\t\t\t\t\t\tthis.name = name;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Select only the first element for each name, and only those with rules specified\r\n\t\t\t\t\t\tif (name in rulesCache || !validator.objectLength($(this).rules())) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trulesCache[name] = true;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tclean: function (selector) {\r\n\t\t\t\treturn $(selector)[0];\r\n\t\t\t},\r\n\r\n\t\t\terrors: function () {\r\n\t\t\t\tvar errorClass = this.settings.errorClass.split(\" \").join(\".\");\r\n\t\t\t\treturn $(this.settings.errorElement + \".\" + errorClass, this.errorContext);\r\n\t\t\t},\r\n\r\n\t\t\tresetInternals: function () {\r\n\t\t\t\tthis.successList = [];\r\n\t\t\t\tthis.errorList = [];\r\n\t\t\t\tthis.errorMap = {};\r\n\t\t\t\tthis.toShow = $([]);\r\n\t\t\t\tthis.toHide = $([]);\r\n\t\t\t},\r\n\r\n\t\t\treset: function () {\r\n\t\t\t\tthis.resetInternals();\r\n\t\t\t\tthis.currentElements = $([]);\r\n\t\t\t},\r\n\r\n\t\t\tprepareForm: function () {\r\n\t\t\t\tthis.reset();\r\n\t\t\t\tthis.toHide = this.errors().add(this.containers);\r\n\t\t\t},\r\n\r\n\t\t\tprepareElement: function (element) {\r\n\t\t\t\tthis.reset();\r\n\t\t\t\tthis.toHide = this.errorsFor(element);\r\n\t\t\t},\r\n\r\n\t\t\telementValue: function (element) {\r\n\t\t\t\tvar $element = $(element),\r\n\t\t\t\t\ttype = element.type,\r\n\t\t\t\t\tval, idx;\r\n\r\n\t\t\t\tif (type === \"radio\" || type === \"checkbox\") {\r\n\t\t\t\t\treturn this.findByName(element.name).filter(\":checked\").val();\r\n\t\t\t\t} else if (type === \"number\" && typeof element.validity !== \"undefined\") {\r\n\t\t\t\t\treturn element.validity.badInput ? \"NaN\" : $element.val();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (element.hasAttribute(\"contenteditable\")) {\r\n\t\t\t\t\tval = $element.text();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = $element.val();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (type === \"file\") {\r\n\r\n\t\t\t\t\t// Modern browser (chrome & safari)\r\n\t\t\t\t\tif (val.substr(0, 12) === \"C:\\\\fakepath\\\\\") {\r\n\t\t\t\t\t\treturn val.substr(12);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Legacy browsers\r\n\t\t\t\t\t// Unix-based path\r\n\t\t\t\t\tidx = val.lastIndexOf(\"/\");\r\n\t\t\t\t\tif (idx >= 0) {\r\n\t\t\t\t\t\treturn val.substr(idx + 1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Windows-based path\r\n\t\t\t\t\tidx = val.lastIndexOf(\"\\\\\");\r\n\t\t\t\t\tif (idx >= 0) {\r\n\t\t\t\t\t\treturn val.substr(idx + 1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Just the file name\r\n\t\t\t\t\treturn val;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof val === \"string\") {\r\n\t\t\t\t\treturn val.replace(/\\r/g, \"\");\r\n\t\t\t\t}\r\n\t\t\t\treturn val;\r\n\t\t\t},\r\n\r\n\t\t\tcheck: function (element) {\r\n\t\t\t\telement = this.validationTargetFor(this.clean(element));\r\n\r\n\t\t\t\tvar rules = $(element).rules(),\r\n\t\t\t\t\trulesCount = $.map(rules, function (n, i) {\r\n\t\t\t\t\t\treturn i;\r\n\t\t\t\t\t}).length,\r\n\t\t\t\t\tdependencyMismatch = false,\r\n\t\t\t\t\tval = this.elementValue(element),\r\n\t\t\t\t\tresult, method, rule, normalizer;\r\n\r\n\t\t\t\t// Prioritize the local normalizer defined for this element over the global one\r\n\t\t\t\t// if the former exists, otherwise user the global one in case it exists.\r\n\t\t\t\tif (typeof rules.normalizer === \"function\") {\r\n\t\t\t\t\tnormalizer = rules.normalizer;\r\n\t\t\t\t} else if (typeof this.settings.normalizer === \"function\") {\r\n\t\t\t\t\tnormalizer = this.settings.normalizer;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If normalizer is defined, then call it to retreive the changed value instead\r\n\t\t\t\t// of using the real one.\r\n\t\t\t\t// Note that `this` in the normalizer is `element`.\r\n\t\t\t\tif (normalizer) {\r\n\t\t\t\t\tval = normalizer.call(element, val);\r\n\r\n\t\t\t\t\tif (typeof val !== \"string\") {\r\n\t\t\t\t\t\tthrow new TypeError(\"The normalizer should return a string value.\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Delete the normalizer from rules to avoid treating it as a pre-defined method.\r\n\t\t\t\t\tdelete rules.normalizer;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (method in rules) {\r\n\t\t\t\t\trule = {\r\n\t\t\t\t\t\tmethod: method,\r\n\t\t\t\t\t\tparameters: rules[method]\r\n\t\t\t\t\t};\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tresult = $.validator.methods[method].call(this, val, element, rule.parameters);\r\n\r\n\t\t\t\t\t\t// If a method indicates that the field is optional and therefore valid,\r\n\t\t\t\t\t\t// don't mark it as valid when there are no other rules\r\n\t\t\t\t\t\tif (result === \"dependency-mismatch\" && rulesCount === 1) {\r\n\t\t\t\t\t\t\tdependencyMismatch = true;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdependencyMismatch = false;\r\n\r\n\t\t\t\t\t\tif (result === \"pending\") {\r\n\t\t\t\t\t\t\tthis.toHide = this.toHide.not(this.errorsFor(element));\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!result) {\r\n\t\t\t\t\t\t\tthis.formatAndAdd(element, rule);\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tif (this.settings.debug && window.console) {\r\n\t\t\t\t\t\t\tconsole.log(\"Exception occurred when checking element \" + element.id + \", check the '\" + rule.method + \"' method.\", e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (e instanceof TypeError) {\r\n\t\t\t\t\t\t\te.message += \".  Exception occurred when checking element \" + element.id + \", check the '\" + rule.method + \"' method.\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (dependencyMismatch) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.objectLength(rules)) {\r\n\t\t\t\t\tthis.successList.push(element);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\t// Return the custom message for the given element and validation method\r\n\t\t\t// specified in the element's HTML5 data attribute\r\n\t\t\t// return the generic message if present and no method specific message is present\r\n\t\t\tcustomDataMessage: function (element, method) {\r\n\t\t\t\treturn $(element).data(\"msg\" + method.charAt(0).toUpperCase() +\r\n\t\t\t\t\tmethod.substring(1).toLowerCase()) || $(element).data(\"msg\");\r\n\t\t\t},\r\n\r\n\t\t\t// Return the custom message for the given element name and validation method\r\n\t\t\tcustomMessage: function (name, method) {\r\n\t\t\t\tvar m = this.settings.messages[name];\r\n\t\t\t\treturn m && (m.constructor === String ? m : m[method]);\r\n\t\t\t},\r\n\r\n\t\t\t// Return the first defined argument, allowing empty strings\r\n\t\t\tfindDefined: function () {\r\n\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\tif (arguments[i] !== undefined) {\r\n\t\t\t\t\t\treturn arguments[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn undefined;\r\n\t\t\t},\r\n\r\n\t\t\t// The second parameter 'rule' used to be a string, and extended to an object literal\r\n\t\t\t// of the following form:\r\n\t\t\t// rule = {\r\n\t\t\t//     method: \"method name\",\r\n\t\t\t//     parameters: \"the given method parameters\"\r\n\t\t\t// }\r\n\t\t\t//\r\n\t\t\t// The old behavior still supported, kept to maintain backward compatibility with\r\n\t\t\t// old code, and will be removed in the next major release.\r\n\t\t\tdefaultMessage: function (element, rule) {\r\n\t\t\t\tif (typeof rule === \"string\") {\r\n\t\t\t\t\trule = {\r\n\t\t\t\t\t\tmethod: rule\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar message = this.findDefined(\r\n\t\t\t\t\t\tthis.customMessage(element.name, rule.method),\r\n\t\t\t\t\t\tthis.customDataMessage(element, rule.method),\r\n\r\n\t\t\t\t\t\t// 'title' is never undefined, so handle empty string as undefined\r\n\t\t\t\t\t\t!this.settings.ignoreTitle && element.title || undefined,\r\n\t\t\t\t\t\t$.validator.messages[rule.method],\r\n\t\t\t\t\t\t\"<strong>Warning: No message defined for \" + element.name + \"</strong>\"\r\n\t\t\t\t\t),\r\n\t\t\t\t\ttheregex = /\\$?\\{(\\d+)\\}/g;\r\n\t\t\t\tif (typeof message === \"function\") {\r\n\t\t\t\t\tmessage = message.call(this, rule.parameters, element);\r\n\t\t\t\t} else if (theregex.test(message)) {\r\n\t\t\t\t\tmessage = $.validator.format(message.replace(theregex, \"{$1}\"), rule.parameters);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn message;\r\n\t\t\t},\r\n\r\n\t\t\tformatAndAdd: function (element, rule) {\r\n\t\t\t\tvar message = this.defaultMessage(element, rule);\r\n\r\n\t\t\t\tthis.errorList.push({\r\n\t\t\t\t\tmessage: message,\r\n\t\t\t\t\telement: element,\r\n\t\t\t\t\tmethod: rule.method\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.errorMap[element.name] = message;\r\n\t\t\t\tthis.submitted[element.name] = message;\r\n\t\t\t},\r\n\r\n\t\t\taddWrapper: function (toToggle) {\r\n\t\t\t\tif (this.settings.wrapper) {\r\n\t\t\t\t\ttoToggle = toToggle.add(toToggle.parent(this.settings.wrapper));\r\n\t\t\t\t}\r\n\t\t\t\treturn toToggle;\r\n\t\t\t},\r\n\r\n\t\t\tdefaultShowErrors: function () {\r\n\t\t\t\tvar i, elements, error;\r\n\t\t\t\tfor (i = 0; this.errorList[i]; i++) {\r\n\t\t\t\t\terror = this.errorList[i];\r\n\t\t\t\t\tif (this.settings.highlight) {\r\n\t\t\t\t\t\tthis.settings.highlight.call(this, error.element, this.settings.errorClass, this.settings.validClass);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.showLabel(error.element, error.message);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.errorList.length) {\r\n\t\t\t\t\tthis.toShow = this.toShow.add(this.containers);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.settings.success) {\r\n\t\t\t\t\tfor (i = 0; this.successList[i]; i++) {\r\n\t\t\t\t\t\tthis.showLabel(this.successList[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.settings.unhighlight) {\r\n\t\t\t\t\tfor (i = 0, elements = this.validElements(); elements[i]; i++) {\r\n\t\t\t\t\t\tthis.settings.unhighlight.call(this, elements[i], this.settings.errorClass, this.settings.validClass);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.toHide = this.toHide.not(this.toShow);\r\n\t\t\t\tthis.hideErrors();\r\n\t\t\t\tthis.addWrapper(this.toShow).show();\r\n\t\t\t},\r\n\r\n\t\t\tvalidElements: function () {\r\n\t\t\t\treturn this.currentElements.not(this.invalidElements());\r\n\t\t\t},\r\n\r\n\t\t\tinvalidElements: function () {\r\n\t\t\t\treturn $(this.errorList).map(function () {\r\n\t\t\t\t\treturn this.element;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tshowLabel: function (element, message) {\r\n\t\t\t\tvar place, group, errorID, v,\r\n\t\t\t\t\terror = this.errorsFor(element),\r\n\t\t\t\t\telementID = this.idOrName(element),\r\n\t\t\t\t\tdescribedBy = $(element).attr(\"aria-describedby\");\r\n\r\n\t\t\t\tif (error.length) {\r\n\r\n\t\t\t\t\t// Refresh error/success class\r\n\t\t\t\t\terror.removeClass(this.settings.validClass).addClass(this.settings.errorClass);\r\n\r\n\t\t\t\t\t// Replace message on existing label\r\n\t\t\t\t\terror.html(message);\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Create error element\r\n\t\t\t\t\terror = $(\"<\" + this.settings.errorElement + \">\")\r\n\t\t\t\t\t\t.attr(\"id\", elementID + \"-error\")\r\n\t\t\t\t\t\t.addClass(this.settings.errorClass)\r\n\t\t\t\t\t\t.html(message || \"\");\r\n\r\n\t\t\t\t\t// Maintain reference to the element to be placed into the DOM\r\n\t\t\t\t\tplace = error;\r\n\t\t\t\t\tif (this.settings.wrapper) {\r\n\r\n\t\t\t\t\t\t// Make sure the element is visible, even in IE\r\n\t\t\t\t\t\t// actually showing the wrapped element is handled elsewhere\r\n\t\t\t\t\t\tplace = error.hide().show().wrap(\"<\" + this.settings.wrapper + \"/>\").parent();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.labelContainer.length) {\r\n\t\t\t\t\t\tthis.labelContainer.append(place);\r\n\t\t\t\t\t} else if (this.settings.errorPlacement) {\r\n\t\t\t\t\t\tthis.settings.errorPlacement.call(this, place, $(element));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tplace.insertAfter(element);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Link error back to the element\r\n\t\t\t\t\tif (error.is(\"label\")) {\r\n\r\n\t\t\t\t\t\t// If the error is a label, then associate using 'for'\r\n\t\t\t\t\t\terror.attr(\"for\", elementID);\r\n\r\n\t\t\t\t\t\t// If the element is not a child of an associated label, then it's necessary\r\n\t\t\t\t\t\t// to explicitly apply aria-describedby\r\n\t\t\t\t\t} else if (error.parents(\"label[for='\" + this.escapeCssMeta(elementID) + \"']\").length === 0) {\r\n\t\t\t\t\t\terrorID = error.attr(\"id\");\r\n\r\n\t\t\t\t\t\t// Respect existing non-error aria-describedby\r\n\t\t\t\t\t\tif (!describedBy) {\r\n\t\t\t\t\t\t\tdescribedBy = errorID;\r\n\t\t\t\t\t\t} else if (!describedBy.match(new RegExp(\"\\\\b\" + this.escapeCssMeta(errorID) + \"\\\\b\"))) {\r\n\r\n\t\t\t\t\t\t\t// Add to end of list if not already present\r\n\t\t\t\t\t\t\tdescribedBy += \" \" + errorID;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$(element).attr(\"aria-describedby\", describedBy);\r\n\r\n\t\t\t\t\t\t// If this element is grouped, then assign to all elements in the same group\r\n\t\t\t\t\t\tgroup = this.groups[element.name];\r\n\t\t\t\t\t\tif (group) {\r\n\t\t\t\t\t\t\tv = this;\r\n\t\t\t\t\t\t\t$.each(v.groups, function (name, testgroup) {\r\n\t\t\t\t\t\t\t\tif (testgroup === group) {\r\n\t\t\t\t\t\t\t\t\t$(\"[name='\" + v.escapeCssMeta(name) + \"']\", v.currentForm)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"aria-describedby\", error.attr(\"id\"));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!message && this.settings.success) {\r\n\t\t\t\t\terror.text(\"\");\r\n\t\t\t\t\tif (typeof this.settings.success === \"string\") {\r\n\t\t\t\t\t\terror.addClass(this.settings.success);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.settings.success(error, element);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.toShow = this.toShow.add(error);\r\n\t\t\t},\r\n\r\n\t\t\terrorsFor: function (element) {\r\n\t\t\t\tvar name = this.escapeCssMeta(this.idOrName(element)),\r\n\t\t\t\t\tdescriber = $(element).attr(\"aria-describedby\"),\r\n\t\t\t\t\tselector = \"label[for='\" + name + \"'], label[for='\" + name + \"'] *\";\r\n\r\n\t\t\t\t// 'aria-describedby' should directly reference the error element\r\n\t\t\t\tif (describer) {\r\n\t\t\t\t\tselector = selector + \", #\" + this.escapeCssMeta(describer)\r\n\t\t\t\t\t\t.replace(/\\s+/g, \", #\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this\r\n\t\t\t\t\t.errors()\r\n\t\t\t\t\t.filter(selector);\r\n\t\t\t},\r\n\r\n\t\t\t// See https://api.jquery.com/category/selectors/, for CSS\r\n\t\t\t// meta-characters that should be escaped in order to be used with JQuery\r\n\t\t\t// as a literal part of a name/id or any selector.\r\n\t\t\tescapeCssMeta: function (string) {\r\n\t\t\t\treturn string.replace(/([\\\\!\"#$%&'()*+,./:;<=>?@\\[\\]^`{|}~])/g, \"\\\\$1\");\r\n\t\t\t},\r\n\r\n\t\t\tidOrName: function (element) {\r\n\t\t\t\treturn this.groups[element.name] || (this.checkable(element) ? element.name : element.id || element.name);\r\n\t\t\t},\r\n\r\n\t\t\tvalidationTargetFor: function (element) {\r\n\r\n\t\t\t\t// If radio/checkbox, validate first element in group instead\r\n\t\t\t\tif (this.checkable(element)) {\r\n\t\t\t\t\telement = this.findByName(element.name);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Always apply ignore filter\r\n\t\t\t\treturn $(element).not(this.settings.ignore)[0];\r\n\t\t\t},\r\n\r\n\t\t\tcheckable: function (element) {\r\n\t\t\t\treturn (/radio|checkbox/i).test(element.type);\r\n\t\t\t},\r\n\r\n\t\t\tfindByName: function (name) {\r\n\t\t\t\treturn $(this.currentForm).find(\"[name='\" + this.escapeCssMeta(name) + \"']\");\r\n\t\t\t},\r\n\r\n\t\t\tgetLength: function (value, element) {\r\n\t\t\t\tswitch (element.nodeName.toLowerCase()) {\r\n\t\t\t\t\tcase \"select\":\r\n\t\t\t\t\t\treturn $(\"option:selected\", element).length;\r\n\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\tif (this.checkable(element)) {\r\n\t\t\t\t\t\t\treturn this.findByName(element.name).filter(\":checked\").length;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn value.length;\r\n\t\t\t},\r\n\r\n\t\t\tdepend: function (param, element) {\r\n\t\t\t\treturn this.dependTypes[typeof param] ? this.dependTypes[typeof param](param, element) : true;\r\n\t\t\t},\r\n\r\n\t\t\tdependTypes: {\r\n\t\t\t\t\"boolean\": function (param) {\r\n\t\t\t\t\treturn param;\r\n\t\t\t\t},\r\n\t\t\t\t\"string\": function (param, element) {\r\n\t\t\t\t\treturn !!$(param, element.form).length;\r\n\t\t\t\t},\r\n\t\t\t\t\"function\": function (param, element) {\r\n\t\t\t\t\treturn param(element);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\toptional: function (element) {\r\n\t\t\t\tvar val = this.elementValue(element);\r\n\t\t\t\treturn !$.validator.methods.required.call(this, val, element) && \"dependency-mismatch\";\r\n\t\t\t},\r\n\r\n\t\t\tstartRequest: function (element) {\r\n\t\t\t\tif (!this.pending[element.name]) {\r\n\t\t\t\t\tthis.pendingRequest++;\r\n\t\t\t\t\t$(element).addClass(this.settings.pendingClass);\r\n\t\t\t\t\tthis.pending[element.name] = true;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tstopRequest: function (element, valid) {\r\n\t\t\t\tthis.pendingRequest--;\r\n\r\n\t\t\t\t// Sometimes synchronization fails, make sure pendingRequest is never < 0\r\n\t\t\t\tif (this.pendingRequest < 0) {\r\n\t\t\t\t\tthis.pendingRequest = 0;\r\n\t\t\t\t}\r\n\t\t\t\tdelete this.pending[element.name];\r\n\t\t\t\t$(element).removeClass(this.settings.pendingClass);\r\n\t\t\t\tif (valid && this.pendingRequest === 0 && this.formSubmitted && this.form()) {\r\n\t\t\t\t\t$(this.currentForm).submit();\r\n\r\n\t\t\t\t\t// Remove the hidden input that was used as a replacement for the\r\n\t\t\t\t\t// missing submit button. The hidden input is added by `handle()`\r\n\t\t\t\t\t// to ensure that the value of the used submit button is passed on\r\n\t\t\t\t\t// for scripted submits triggered by this method\r\n\t\t\t\t\tif (this.submitButton) {\r\n\t\t\t\t\t\t$(\"input:hidden[name='\" + this.submitButton.name + \"']\", this.currentForm).remove();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.formSubmitted = false;\r\n\t\t\t\t} else if (!valid && this.pendingRequest === 0 && this.formSubmitted) {\r\n\t\t\t\t\t$(this.currentForm).triggerHandler(\"invalid-form\", [this]);\r\n\t\t\t\t\tthis.formSubmitted = false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tpreviousValue: function (element, method) {\r\n\t\t\t\tmethod = typeof method === \"string\" && method || \"remote\";\r\n\r\n\t\t\t\treturn $.data(element, \"previousValue\") || $.data(element, \"previousValue\", {\r\n\t\t\t\t\told: null,\r\n\t\t\t\t\tvalid: true,\r\n\t\t\t\t\tmessage: this.defaultMessage(element, {\r\n\t\t\t\t\t\tmethod: method\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t// Cleans up all forms and elements, removes validator-specific events\r\n\t\t\tdestroy: function () {\r\n\t\t\t\tthis.resetForm();\r\n\r\n\t\t\t\t$(this.currentForm)\r\n\t\t\t\t\t.off(\".validate\")\r\n\t\t\t\t\t.removeData(\"validator\")\r\n\t\t\t\t\t.find(\".validate-equalTo-blur\")\r\n\t\t\t\t\t.off(\".validate-equalTo\")\r\n\t\t\t\t\t.removeClass(\"validate-equalTo-blur\");\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclassRuleSettings: {\r\n\t\t\trequired: {\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\temail: {\r\n\t\t\t\temail: true\r\n\t\t\t},\r\n\t\t\turl: {\r\n\t\t\t\turl: true\r\n\t\t\t},\r\n\t\t\tdate: {\r\n\t\t\t\tdate: true\r\n\t\t\t},\r\n\t\t\tdateISO: {\r\n\t\t\t\tdateISO: true\r\n\t\t\t},\r\n\t\t\tnumber: {\r\n\t\t\t\tnumber: true\r\n\t\t\t},\r\n\t\t\tdigits: {\r\n\t\t\t\tdigits: true\r\n\t\t\t},\r\n\t\t\tcreditcard: {\r\n\t\t\t\tcreditcard: true\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\taddClassRules: function (className, rules) {\r\n\t\t\tif (className.constructor === String) {\r\n\t\t\t\tthis.classRuleSettings[className] = rules;\r\n\t\t\t} else {\r\n\t\t\t\t$.extend(this.classRuleSettings, className);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclassRules: function (element) {\r\n\t\t\tvar rules = {},\r\n\t\t\t\tclasses = $(element).attr(\"class\");\r\n\r\n\t\t\tif (classes) {\r\n\t\t\t\t$.each(classes.split(\" \"), function () {\r\n\t\t\t\t\tif (this in $.validator.classRuleSettings) {\r\n\t\t\t\t\t\t$.extend(rules, $.validator.classRuleSettings[this]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn rules;\r\n\t\t},\r\n\r\n\t\tnormalizeAttributeRule: function (rules, type, method, value) {\r\n\r\n\t\t\t// Convert the value to a number for number inputs, and for text for backwards compability\r\n\t\t\t// allows type=\"date\" and others to be compared as strings\r\n\t\t\tif (/min|max|step/.test(method) && (type === null || /number|range|text/.test(type))) {\r\n\t\t\t\tvalue = Number(value);\r\n\r\n\t\t\t\t// Support Opera Mini, which returns NaN for undefined minlength\r\n\t\t\t\tif (isNaN(value)) {\r\n\t\t\t\t\tvalue = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (value || value === 0) {\r\n\t\t\t\trules[method] = value;\r\n\t\t\t} else if (type === method && type !== \"range\") {\r\n\r\n\t\t\t\t// Exception: the jquery validate 'range' method\r\n\t\t\t\t// does not test for the html5 'range' type\r\n\t\t\t\trules[method] = true;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tattributeRules: function (element) {\r\n\t\t\tvar rules = {},\r\n\t\t\t\t$element = $(element),\r\n\t\t\t\ttype = element.getAttribute(\"type\"),\r\n\t\t\t\tmethod, value;\r\n\r\n\t\t\tfor (method in $.validator.methods) {\r\n\r\n\t\t\t\t// Support for <input required> in both html5 and older browsers\r\n\t\t\t\tif (method === \"required\") {\r\n\t\t\t\t\tvalue = element.getAttribute(method);\r\n\r\n\t\t\t\t\t// Some browsers return an empty string for the required attribute\r\n\t\t\t\t\t// and non-HTML5 browsers might have required=\"\" markup\r\n\t\t\t\t\tif (value === \"\") {\r\n\t\t\t\t\t\tvalue = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Force non-HTML5 browsers to return bool\r\n\t\t\t\t\tvalue = !!value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = $element.attr(method);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.normalizeAttributeRule(rules, type, method, value);\r\n\t\t\t}\r\n\r\n\t\t\t// 'maxlength' may be returned as -1, 2147483647 ( IE ) and 524288 ( safari ) for text inputs\r\n\t\t\tif (rules.maxlength && /-1|2147483647|524288/.test(rules.maxlength)) {\r\n\t\t\t\tdelete rules.maxlength;\r\n\t\t\t}\r\n\r\n\t\t\treturn rules;\r\n\t\t},\r\n\r\n\t\tdataRules: function (element) {\r\n\t\t\tvar rules = {},\r\n\t\t\t\t$element = $(element),\r\n\t\t\t\ttype = element.getAttribute(\"type\"),\r\n\t\t\t\tmethod, value;\r\n\r\n\t\t\tfor (method in $.validator.methods) {\r\n\t\t\t\tvalue = $element.data(\"rule\" + method.charAt(0).toUpperCase() + method.substring(1).toLowerCase());\r\n\t\t\t\tthis.normalizeAttributeRule(rules, type, method, value);\r\n\t\t\t}\r\n\t\t\treturn rules;\r\n\t\t},\r\n\r\n\t\tstaticRules: function (element) {\r\n\t\t\tvar rules = {},\r\n\t\t\t\tvalidator = $.data(element.form, \"validator\");\r\n\r\n\t\t\tif (validator.settings.rules) {\r\n\t\t\t\trules = $.validator.normalizeRule(validator.settings.rules[element.name]) || {};\r\n\t\t\t}\r\n\t\t\treturn rules;\r\n\t\t},\r\n\r\n\t\tnormalizeRules: function (rules, element) {\r\n\r\n\t\t\t// Handle dependency check\r\n\t\t\t$.each(rules, function (prop, val) {\r\n\r\n\t\t\t\t// Ignore rule when param is explicitly false, eg. required:false\r\n\t\t\t\tif (val === false) {\r\n\t\t\t\t\tdelete rules[prop];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (val.param || val.depends) {\r\n\t\t\t\t\tvar keepRule = true;\r\n\t\t\t\t\tswitch (typeof val.depends) {\r\n\t\t\t\t\t\tcase \"string\":\r\n\t\t\t\t\t\t\tkeepRule = !!$(val.depends, element.form).length;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"function\":\r\n\t\t\t\t\t\t\tkeepRule = val.depends.call(element, element);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (keepRule) {\r\n\t\t\t\t\t\trules[prop] = val.param !== undefined ? val.param : true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$.data(element.form, \"validator\").resetElements($(element));\r\n\t\t\t\t\t\tdelete rules[prop];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Evaluate parameters\r\n\t\t\t$.each(rules, function (rule, parameter) {\r\n\t\t\t\trules[rule] = $.isFunction(parameter) && rule !== \"normalizer\" ? parameter(element) : parameter;\r\n\t\t\t});\r\n\r\n\t\t\t// Clean number parameters\r\n\t\t\t$.each([\"minlength\", \"maxlength\"], function () {\r\n\t\t\t\tif (rules[this]) {\r\n\t\t\t\t\trules[this] = Number(rules[this]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t$.each([\"rangelength\", \"range\"], function () {\r\n\t\t\t\tvar parts;\r\n\t\t\t\tif (rules[this]) {\r\n\t\t\t\t\tif ($.isArray(rules[this])) {\r\n\t\t\t\t\t\trules[this] = [Number(rules[this][0]), Number(rules[this][1])];\r\n\t\t\t\t\t} else if (typeof rules[this] === \"string\") {\r\n\t\t\t\t\t\tparts = rules[this].replace(/[\\[\\]]/g, \"\").split(/[\\s,]+/);\r\n\t\t\t\t\t\trules[this] = [Number(parts[0]), Number(parts[1])];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif ($.validator.autoCreateRanges) {\r\n\r\n\t\t\t\t// Auto-create ranges\r\n\t\t\t\tif (rules.min != null && rules.max != null) {\r\n\t\t\t\t\trules.range = [rules.min, rules.max];\r\n\t\t\t\t\tdelete rules.min;\r\n\t\t\t\t\tdelete rules.max;\r\n\t\t\t\t}\r\n\t\t\t\tif (rules.minlength != null && rules.maxlength != null) {\r\n\t\t\t\t\trules.rangelength = [rules.minlength, rules.maxlength];\r\n\t\t\t\t\tdelete rules.minlength;\r\n\t\t\t\t\tdelete rules.maxlength;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn rules;\r\n\t\t},\r\n\r\n\t\t// Converts a simple string to a {string: true} rule, e.g., \"required\" to {required:true}\r\n\t\tnormalizeRule: function (data) {\r\n\t\t\tif (typeof data === \"string\") {\r\n\t\t\t\tvar transformed = {};\r\n\t\t\t\t$.each(data.split(/\\s/), function () {\r\n\t\t\t\t\ttransformed[this] = true;\r\n\t\t\t\t});\r\n\t\t\t\tdata = transformed;\r\n\t\t\t}\r\n\t\t\treturn data;\r\n\t\t},\r\n\r\n\t\t// https://jqueryvalidation.org/jQuery.validator.addMethod/\r\n\t\taddMethod: function (name, method, message) {\r\n\t\t\t$.validator.methods[name] = method;\r\n\t\t\t$.validator.messages[name] = message !== undefined ? message : $.validator.messages[name];\r\n\t\t\tif (method.length < 3) {\r\n\t\t\t\t$.validator.addClassRules(name, $.validator.normalizeRule(name));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// https://jqueryvalidation.org/jQuery.validator.methods/\r\n\t\tmethods: {\r\n\r\n\t\t\t// https://jqueryvalidation.org/required-method/\r\n\t\t\trequired: function (value, element, param) {\r\n\r\n\t\t\t\t// Check if dependency is met\r\n\t\t\t\tif (!this.depend(param, element)) {\r\n\t\t\t\t\treturn \"dependency-mismatch\";\r\n\t\t\t\t}\r\n\t\t\t\tif (element.nodeName.toLowerCase() === \"select\") {\r\n\r\n\t\t\t\t\t// Could be an array for select-multiple or a string, both are fine this way\r\n\t\t\t\t\tvar val = $(element).val();\r\n\t\t\t\t\treturn val && val.length > 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.checkable(element)) {\r\n\t\t\t\t\treturn this.getLength(value, element) > 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn value.length > 0;\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/email-method/\r\n\t\t\temail: function (value, element) {\r\n\r\n\t\t\t\t// From https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address\r\n\t\t\t\t// Retrieved 2014-01-14\r\n\t\t\t\t// If you have a problem with this implementation, report a bug against the above spec\r\n\t\t\t\t// Or use custom methods to implement your own email validation\r\n\t\t\t\treturn this.optional(element) || /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value);\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/url-method/\r\n\t\t\turl: function (value, element) {\r\n\r\n\t\t\t\t// Copyright (c) 2010-2013 Diego Perini, MIT licensed\r\n\t\t\t\t// https://gist.github.com/dperini/729294\r\n\t\t\t\t// see also https://mathiasbynens.be/demo/url-regex\r\n\t\t\t\t// modified to allow protocol-relative URLs\r\n\t\t\t\treturn this.optional(element) || /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})).?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/date-method/\r\n\t\t\tdate: function (value, element) {\r\n\t\t\t\treturn this.optional(element) || !/Invalid|NaN/.test(new Date(value).toString());\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/dateISO-method/\r\n\t\t\tdateISO: function (value, element) {\r\n\t\t\t\treturn this.optional(element) || /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/.test(value);\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/number-method/\r\n\t\t\tnumber: function (value, element) {\r\n\t\t\t\treturn this.optional(element) || /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test(value);\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/digits-method/\r\n\t\t\tdigits: function (value, element) {\r\n\t\t\t\treturn this.optional(element) || /^\\d+$/.test(value);\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/minlength-method/\r\n\t\t\tminlength: function (value, element, param) {\r\n\t\t\t\tvar length = $.isArray(value) ? value.length : this.getLength(value, element);\r\n\t\t\t\treturn this.optional(element) || length >= param;\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/maxlength-method/\r\n\t\t\tmaxlength: function (value, element, param) {\r\n\t\t\t\tvar length = $.isArray(value) ? value.length : this.getLength(value, element);\r\n\t\t\t\treturn this.optional(element) || length <= param;\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/rangelength-method/\r\n\t\t\trangelength: function (value, element, param) {\r\n\t\t\t\tvar length = $.isArray(value) ? value.length : this.getLength(value, element);\r\n\t\t\t\treturn this.optional(element) || (length >= param[0] && length <= param[1]);\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/min-method/\r\n\t\t\tmin: function (value, element, param) {\r\n\t\t\t\treturn this.optional(element) || value >= param;\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/max-method/\r\n\t\t\tmax: function (value, element, param) {\r\n\t\t\t\treturn this.optional(element) || value <= param;\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/range-method/\r\n\t\t\trange: function (value, element, param) {\r\n\t\t\t\treturn this.optional(element) || (value >= param[0] && value <= param[1]);\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/step-method/\r\n\t\t\tstep: function (value, element, param) {\r\n\t\t\t\tvar type = $(element).attr(\"type\"),\r\n\t\t\t\t\terrorMessage = \"Step attribute on input type \" + type + \" is not supported.\",\r\n\t\t\t\t\tsupportedTypes = [\"text\", \"number\", \"range\"],\r\n\t\t\t\t\tre = new RegExp(\"\\\\b\" + type + \"\\\\b\"),\r\n\t\t\t\t\tnotSupported = type && !re.test(supportedTypes.join()),\r\n\t\t\t\t\tdecimalPlaces = function (num) {\r\n\t\t\t\t\t\tvar match = (\"\" + num).match(/(?:\\.(\\d+))?$/);\r\n\t\t\t\t\t\tif (!match) {\r\n\t\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Number of digits right of decimal point.\r\n\t\t\t\t\t\treturn match[1] ? match[1].length : 0;\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttoInt = function (num) {\r\n\t\t\t\t\t\treturn Math.round(num * Math.pow(10, decimals));\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalid = true,\r\n\t\t\t\t\tdecimals;\r\n\r\n\t\t\t\t// Works only for text, number and range input types\r\n\t\t\t\t// TODO find a way to support input types date, datetime, datetime-local, month, time and week\r\n\t\t\t\tif (notSupported) {\r\n\t\t\t\t\tthrow new Error(errorMessage);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdecimals = decimalPlaces(param);\r\n\r\n\t\t\t\t// Value can't have too many decimals\r\n\t\t\t\tif (decimalPlaces(value) > decimals || toInt(value) % toInt(param) !== 0) {\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.optional(element) || valid;\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/equalTo-method/\r\n\t\t\tequalTo: function (value, element, param) {\r\n\r\n\t\t\t\t// Bind to the blur event of the target in order to revalidate whenever the target field is updated\r\n\t\t\t\tvar target = $(param);\r\n\t\t\t\tif (this.settings.onfocusout && target.not(\".validate-equalTo-blur\").length) {\r\n\t\t\t\t\ttarget.addClass(\"validate-equalTo-blur\").on(\"blur.validate-equalTo\", function () {\r\n\t\t\t\t\t\t$(element).valid();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn value === target.val();\r\n\t\t\t},\r\n\r\n\t\t\t// https://jqueryvalidation.org/remote-method/\r\n\t\t\tremote: function (value, element, param, method) {\r\n\t\t\t\tif (this.optional(element)) {\r\n\t\t\t\t\treturn \"dependency-mismatch\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmethod = typeof method === \"string\" && method || \"remote\";\r\n\r\n\t\t\t\tvar previous = this.previousValue(element, method),\r\n\t\t\t\t\tvalidator, data, optionDataString;\r\n\r\n\t\t\t\tif (!this.settings.messages[element.name]) {\r\n\t\t\t\t\tthis.settings.messages[element.name] = {};\r\n\t\t\t\t}\r\n\t\t\t\tprevious.originalMessage = previous.originalMessage || this.settings.messages[element.name][method];\r\n\t\t\t\tthis.settings.messages[element.name][method] = previous.message;\r\n\r\n\t\t\t\tparam = typeof param === \"string\" && {\r\n\t\t\t\t\turl: param\r\n\t\t\t\t} || param;\r\n\t\t\t\toptionDataString = $.param($.extend({\r\n\t\t\t\t\tdata: value\r\n\t\t\t\t}, param.data));\r\n\t\t\t\tif (previous.old === optionDataString) {\r\n\t\t\t\t\treturn previous.valid;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprevious.old = optionDataString;\r\n\t\t\t\tvalidator = this;\r\n\t\t\t\tthis.startRequest(element);\r\n\t\t\t\tdata = {};\r\n\t\t\t\tdata[element.name] = value;\r\n\t\t\t\t$.ajax($.extend(true, {\r\n\t\t\t\t\tmode: \"abort\",\r\n\t\t\t\t\tport: \"validate\" + element.name,\r\n\t\t\t\t\tdataType: \"json\",\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t\tcontext: validator.currentForm,\r\n\t\t\t\t\tsuccess: function (response) {\r\n\t\t\t\t\t\tvar valid = response === true || response === \"true\",\r\n\t\t\t\t\t\t\terrors, message, submitted;\r\n\r\n\t\t\t\t\t\tvalidator.settings.messages[element.name][method] = previous.originalMessage;\r\n\t\t\t\t\t\tif (valid) {\r\n\t\t\t\t\t\t\tsubmitted = validator.formSubmitted;\r\n\t\t\t\t\t\t\tvalidator.resetInternals();\r\n\t\t\t\t\t\t\tvalidator.toHide = validator.errorsFor(element);\r\n\t\t\t\t\t\t\tvalidator.formSubmitted = submitted;\r\n\t\t\t\t\t\t\tvalidator.successList.push(element);\r\n\t\t\t\t\t\t\tvalidator.invalid[element.name] = false;\r\n\t\t\t\t\t\t\tvalidator.showErrors();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\terrors = {};\r\n\t\t\t\t\t\t\tmessage = response || validator.defaultMessage(element, {\r\n\t\t\t\t\t\t\t\tmethod: method,\r\n\t\t\t\t\t\t\t\tparameters: value\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\terrors[element.name] = previous.message = message;\r\n\t\t\t\t\t\t\tvalidator.invalid[element.name] = true;\r\n\t\t\t\t\t\t\tvalidator.showErrors(errors);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tprevious.valid = valid;\r\n\t\t\t\t\t\tvalidator.stopRequest(element, valid);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, param));\r\n\t\t\t\treturn \"pending\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\t// Ajax mode: abort\r\n\t// usage: $.ajax({ mode: \"abort\"[, port: \"uniqueport\"]});\r\n\t// if mode:\"abort\" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()\r\n\r\n\tvar pendingRequests = {},\r\n\t\tajax;\r\n\r\n\t// Use a prefilter if available (1.5+)\r\n\tif ($.ajaxPrefilter) {\r\n\t\t$.ajaxPrefilter(function (settings, _, xhr) {\r\n\t\t\tvar port = settings.port;\r\n\t\t\tif (settings.mode === \"abort\") {\r\n\t\t\t\tif (pendingRequests[port]) {\r\n\t\t\t\t\tpendingRequests[port].abort();\r\n\t\t\t\t}\r\n\t\t\t\tpendingRequests[port] = xhr;\r\n\t\t\t}\r\n\t\t});\r\n\t} else {\r\n\r\n\t\t// Proxy ajax\r\n\t\tajax = $.ajax;\r\n\t\t$.ajax = function (settings) {\r\n\t\t\tvar mode = (\"mode\" in settings ? settings : $.ajaxSettings).mode,\r\n\t\t\t\tport = (\"port\" in settings ? settings : $.ajaxSettings).port;\r\n\t\t\tif (mode === \"abort\") {\r\n\t\t\t\tif (pendingRequests[port]) {\r\n\t\t\t\t\tpendingRequests[port].abort();\r\n\t\t\t\t}\r\n\t\t\t\tpendingRequests[port] = ajax.apply(this, arguments);\r\n\t\t\t\treturn pendingRequests[port];\r\n\t\t\t}\r\n\t\t\treturn ajax.apply(this, arguments);\r\n\t\t};\r\n\t}\r\n\treturn $;\r\n}));"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}